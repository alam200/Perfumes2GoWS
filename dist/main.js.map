{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/alert/alert.component.css","webpack:///./src/app/common/alert/alert.component.html","webpack:///./src/app/common/alert/alert.component.ts","webpack:///./src/app/common/alert/alert.service.ts","webpack:///./src/app/common/footer/footer.component.css","webpack:///./src/app/common/footer/footer.component.html","webpack:///./src/app/common/footer/footer.component.ts","webpack:///./src/app/common/navbar/navbar.component.css","webpack:///./src/app/common/navbar/navbar.component.html","webpack:///./src/app/common/navbar/navbar.component.ts","webpack:///./src/app/core/cart/cart-details/cart-details.component.css","webpack:///./src/app/core/cart/cart-details/cart-details.component.html","webpack:///./src/app/core/cart/cart-details/cart-details.component.ts","webpack:///./src/app/core/cart/order-status/order-status.component.css","webpack:///./src/app/core/cart/order-status/order-status.component.html","webpack:///./src/app/core/cart/order-status/order-status.component.ts","webpack:///./src/app/core/orders/order-details/order-details.component.css","webpack:///./src/app/core/orders/order-details/order-details.component.html","webpack:///./src/app/core/orders/order-details/order-details.component.ts","webpack:///./src/app/core/orders/order-placed/order-placed.component.css","webpack:///./src/app/core/orders/order-placed/order-placed.component.html","webpack:///./src/app/core/orders/order-placed/order-placed.component.ts","webpack:///./src/app/core/orders/orders-list/orders-list.component.css","webpack:///./src/app/core/orders/orders-list/orders-list.component.html","webpack:///./src/app/core/orders/orders-list/orders-list.component.ts","webpack:///./src/app/core/products/add-product/add-product.component.css","webpack:///./src/app/core/products/add-product/add-product.component.html","webpack:///./src/app/core/products/add-product/add-product.component.ts","webpack:///./src/app/core/products/list-products/list-products.component.css","webpack:///./src/app/core/products/list-products/list-products.component.html","webpack:///./src/app/core/products/list-products/list-products.component.ts","webpack:///./src/app/core/products/upload-products/upload-products.component.css","webpack:///./src/app/core/products/upload-products/upload-products.component.html","webpack:///./src/app/core/products/upload-products/upload-products.component.ts","webpack:///./src/app/core/users/add-address/add-address.component.css","webpack:///./src/app/core/users/add-address/add-address.component.html","webpack:///./src/app/core/users/add-address/add-address.component.ts","webpack:///./src/app/core/users/contact-info/contact-info.component.css","webpack:///./src/app/core/users/contact-info/contact-info.component.html","webpack:///./src/app/core/users/contact-info/contact-info.component.ts","webpack:///./src/app/core/users/core/users/message/message.component.css","webpack:///./src/app/core/users/core/users/message/message.component.html","webpack:///./src/app/core/users/core/users/message/message.component.ts","webpack:///./src/app/core/users/forget-password/forget-password.component.css","webpack:///./src/app/core/users/forget-password/forget-password.component.html","webpack:///./src/app/core/users/forget-password/forget-password.component.ts","webpack:///./src/app/core/users/list-addresses/list-addresses.component.css","webpack:///./src/app/core/users/list-addresses/list-addresses.component.html","webpack:///./src/app/core/users/list-addresses/list-addresses.component.ts","webpack:///./src/app/core/users/login/login.component.css","webpack:///./src/app/core/users/login/login.component.html","webpack:///./src/app/core/users/login/login.component.ts","webpack:///./src/app/core/users/register/register.component.css","webpack:///./src/app/core/users/register/register.component.html","webpack:///./src/app/core/users/register/register.component.ts","webpack:///./src/app/core/users/reset-password/reset-password.component.css","webpack:///./src/app/core/users/reset-password/reset-password.component.html","webpack:///./src/app/core/users/reset-password/reset-password.component.ts","webpack:///./src/app/directives/equal-validator.directive.ts","webpack:///./src/app/models/orderItem.model.ts","webpack:///./src/app/services/admin.guard.service.ts","webpack:///./src/app/services/auth.guard.service.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/cart.service.ts","webpack:///./src/app/services/http.request.interceptor.ts","webpack:///./src/app/services/products.service.ts","webpack:///./src/app/services/session.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nimport { OrderDetailsComponent } from './core/orders/order-details/order-details.component';\nimport { OrdersListComponent } from './core/orders/orders-list/orders-list.component';\nimport { ListAddressesComponent } from './core/users/list-addresses/list-addresses.component';\nimport { AddAddressComponent } from './core/users/add-address/add-address.component';\nimport { UploadProductsComponent } from './core/products/upload-products/upload-products.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListProductsComponent } from './core/products/list-products/list-products.component';\nimport { RegisterComponent } from './core/users/register/register.component';\nimport { CartDetailsComponent } from './core/cart/cart-details/cart-details.component';\nimport { AddProductComponent } from './core/products/add-product/add-product.component';\nimport { LoginComponent } from './core/users/login/login.component';\nimport { OrderPlacedComponent } from './core/orders/order-placed/order-placed.component';\nimport { ForgetPasswordComponent } from './core/users/forget-password/forget-password.component';\nimport { AuthGuardService as AuthGuard } from './services/auth.guard.service';\nimport { AdminGuardService as AdminGuard } from './services/admin.guard.service';\nimport { ResetPasswordComponent } from './core/users/reset-password/reset-password.component';\nimport { MessageComponent } from './core/users/core/users/message/message.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/products', pathMatch: 'full' },\n  { path: 'products/special', component: ListProductsComponent },\n  { path: 'products/new', component: ListProductsComponent },\n  { path: 'products', component: ListProductsComponent },\n  { path: 'user/register', component: RegisterComponent },\n  { path: 'user/login', component: LoginComponent },\n  { path: 'user/forgot', component: ForgetPasswordComponent },\n  { path: 'user/verify/:token', component: MessageComponent },\n  { path: 'user/reset/:token', component: ResetPasswordComponent },\n  { path: 'user/details', component: RegisterComponent, canActivate: [AuthGuard] },\n  { path: 'order', component: CartDetailsComponent },\n  { path: 'add-product', component: AddProductComponent, canActivate: [AdminGuard] },\n  { path: 'product-details/:sku', component: AddProductComponent, canActivate: [AdminGuard] },\n  { path: 'upload-products', component: UploadProductsComponent, canActivate: [AdminGuard] },\n  { path: 'addresses', component: ListAddressesComponent, canActivate: [AuthGuard] },\n  { path: 'addresses/add-address', component: AddAddressComponent, canActivate: [AuthGuard] },\n  { path: 'addresses/edit-address/:addressId', component: AddAddressComponent, canActivate: [AuthGuard] },\n  { path: 'orders', component: OrdersListComponent, canActivate: [AdminGuard] },\n  { path: 'orders/order-details/:orderId', component: OrderDetailsComponent, canActivate: [AdminGuard] },\n  { path: 'order-placed', component: OrderPlacedComponent, canActivate: [AuthGuard] },\n  { path: '**', component: ListProductsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".main{\\n  padding: 2vw;\\n}\\n\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"body-content-wrapper\\\">\\n    <app-alert></app-alert>\\n    <router-outlet></router-outlet>\\n</div>\\n<app-footer></app-footer>    \\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './common/alert/alert.component';\nimport { AlertService } from './common/alert/alert.service';\nimport { FooterComponent } from './common/footer/footer.component';\nimport { NavbarComponent } from './common/navbar/navbar.component';\nimport { CartDetailsComponent } from './core/cart/cart-details/cart-details.component';\nimport { OrderStatusComponent } from './core/cart/order-status/order-status.component';\nimport { OrderDetailsComponent } from './core/orders/order-details/order-details.component';\nimport { OrderPlacedComponent } from './core/orders/order-placed/order-placed.component';\nimport { OrdersListComponent } from './core/orders/orders-list/orders-list.component';\nimport { AddProductComponent } from './core/products/add-product/add-product.component';\nimport { ListProductsComponent } from './core/products/list-products/list-products.component';\nimport { UploadProductsComponent } from './core/products/upload-products/upload-products.component';\nimport { AddAddressComponent } from './core/users/add-address/add-address.component';\nimport { ContactInfoComponent } from './core/users/contact-info/contact-info.component';\nimport { ForgetPasswordComponent } from './core/users/forget-password/forget-password.component';\nimport { ListAddressesComponent } from './core/users/list-addresses/list-addresses.component';\nimport { LoginComponent } from './core/users/login/login.component';\nimport { RegisterComponent } from './core/users/register/register.component';\nimport { EqualValidatorDirective } from './directives/equal-validator.directive';\nimport { AdminGuardService } from './services/admin.guard.service';\nimport { AuthGuardService } from './services/auth.guard.service';\nimport { HttpsRequestInterceptor } from './services/http.request.interceptor';\nimport { SessionService } from './services/session.service';\nimport { MessageComponent } from './core/users/core/users/message/message.component';\nimport { ResetPasswordComponent } from './core/users/reset-password/reset-password.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlertComponent,\n    AddProductComponent,\n    CartDetailsComponent,\n    RegisterComponent,\n    LoginComponent,\n    ForgetPasswordComponent,\n    ContactInfoComponent,\n    AddAddressComponent,\n    ListAddressesComponent,\n    OrderStatusComponent,\n    NavbarComponent,\n    FooterComponent,\n    ListProductsComponent,\n    UploadProductsComponent,\n    OrdersListComponent,\n    OrderDetailsComponent,\n    OrderPlacedComponent,\n    EqualValidatorDirective,\n    MessageComponent,\n    ResetPasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    RouterModule,\n    DataTablesModule,\n    HttpClientModule,\n    FileUploadModule,\n    NgxSpinnerModule,\n    NgSelectModule\n  ],\n  providers: [AlertService,\n    AuthGuardService,\n    AdminGuardService,\n    SessionService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpsRequestInterceptor,\n      multi: true,\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"#alert {\\n    position: fixed;\\n    padding: 1.5em;\\n    bottom: 0.1%;\\n    right: 0.1%;\\n    z-index: 9999999;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"message\\\" [ngClass]=\\\"{ 'alert': message, 'alert-success': message.type === 'success', 'alert-danger': message.type === 'error' }\\\">{{message.text}}</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AlertService } from './alert.service';\n\n\n@Component({\n    moduleId: module.id.toString(),\n    selector: 'app-alert',\n    templateUrl: 'alert.component.html',\n    styleUrls: ['./alert.component.css']\n})\n\nexport class AlertComponent implements OnInit {\n    message: any;\n    constructor(private alertService: AlertService) { }\n    ngOnInit() {\n        this.alertService.getMessage().subscribe(message => { this.message = message; });\n    }\n\n    /**\n     *  Close message\n     */\n    closeMessage() {\n        this.alertService.closeMessage();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AlertService {\n  private subject = new Subject<any>();\n  private keepAfterNavigationChange = false;\n\n  constructor(private router: Router) {\n    // clear alert message on route change\n    router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.keepAfterNavigationChange) {\n          // only keep for a single location change\n          this.keepAfterNavigationChange = false;\n        } else {\n          // clear alert\n          this.subject.next();\n        }\n      }\n    });\n  }\n\n  success(message: string, keepAfterNavigationChange = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: 'success', text: message });\n    setTimeout(function () {\n      this.closeMessage();\n    }.bind(this), 5000);\n  }\n\n  error(message: string, keepAfterNavigationChange = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: 'error', text: message });\n    setTimeout(function () {\n      this.closeMessage();\n    }.bind(this), 15000);\n  }\n\n  warning(message: string, keepAfterNavigationChange = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: 'warning', text: message });\n    setTimeout(function () {\n      this.closeMessage();\n    }.bind(this), 10000);\n  }\n\n  getMessage(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  closeMessage() {\n    this.subject.next();\n  }\n}\n","module.exports = \"footer {\\n  margin-top: 15px;\\n  padding: 5px 15px;\\n  position: fixed;\\n  bottom: 0;\\n  z-index: 5;\\n  width: 100%;\\n  background-color: #172337;\\n  font-size: 12px;\\n  color: #fff;\\n}\\n.social-link {\\n  display: inline-block;\\n  padding: 4px 0;\\n  background-color: #fff;\\n  margin-left: 10px;\\n  border-radius: 0.1rem;\\n  width: 30px;\\n  text-align: center;\\n  transition: all 0.3s ease-out;\\n}\\n.social-link:hover {\\n  background-color: #e8e8e8;\\n}\\nfooter .footer-text {\\n  padding-top: 5px;\\n}\\nfooter .fa {\\n  font-size: 20px;\\n  color: #324e97;\\n}\\nfooter a {\\n  color: #fff;\\n  transition: all 0.3s ease-out;\\n}\\nfooter a:hover {\\n  color: #d1d1d1;\\n  text-decoration: none;\\n}\\n/*.top-shadow {\\n  -webkit-box-shadow: 0 -5px 10px 0 rgba(0,0,0,0.25);\\n     -moz-box-shadow: 0 -5px 10px 0 rgba(0,0,0,0.25);\\n          box-shadow: 0 -5px 10px 0 rgba(0,0,0,0.25);\\n}*/\\nfooter p {\\n  margin-bottom: 0;\\n}\\n@media screen and (max-width: 575px){\\n\\n  footer p {\\n    text-align: center !important;\\n    margin-bottom: 5px;\\n  }\\n  .copyright {\\n    margin-bottom: 10px !important;\\n  }\\n}\\n\"","module.exports = \"<footer class=\\\"footer text-center no-print\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 col-sm-4\\\">\\n        <p class=\\\"footer-text text-left\\\">\\n          <!-- <a href=\\\"mailto:abc.xyz@gmail.com\\\" target=\\\"_blank\\\">Contact Us</a> -->\\n        </p>\\n    </div>\\n    <div class=\\\"col-md-4 col-sm-4\\\">\\n      <p class=\\\"footer-text text-center copyright\\\">\\n        &#169; 2018 - Developed by\\n        <a href=\\\"http://akros.uz\\\" target=\\\"_blank\\\">Akros Inc</a>\\n      </p>\\n    </div>\\n    <div class=\\\"col-md-4 col-sm-4\\\">\\n      <!-- <p class=\\\"text-right\\\">\\n        <a href=\\\"#\\\" class=\\\"social-link\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-facebook\\\"></i></a>\\n        <a href=\\\"#\\\" class=\\\"social-link\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-twitter\\\"></i></a>\\n      </p> -->\\n    </div>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navbar {\\n          z-index: 10;\\n          background-color: #2874f0;\\n          padding-top: 0;\\n          padding-bottom: 0;\\n          align-items: normal;\\n}\\n\\n.navbar-brand {\\n          color: white;\\n          font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n/* .navbar .navbar-nav {\\n          margin-left: 30px;\\n} */\\n\\n/* .navbar .nav-item {\\n          border-right: 1px solid #9bc0e1;\\n          border-left: 1px solid #4c82d1;\\n} */\\n\\n.navbar .nav-item:first-child {\\n          border-left: 0;\\n}\\n\\n.navbar .nav-item:last-child {\\n          border-right: 0;\\n}\\n\\n.navbar-nav .nav-link {\\n          color: rgb(255, 255, 255);\\n          border-bottom: 3px solid transparent;\\n}\\n\\n.navbar-nav .nav-link:hover {\\n          border-bottom: 3px solid #FFDE00;\\n}\\n\\n.navbar-brand small {\\n    display:block;\\n    font-size:12px;\\n  }\\n\\n.nav-item>.nav-link.active {\\n          border-bottom: 3px solid #FFDE00;\\n}\\n\\n/*\\n.fa-shopping-cart {\\n          font-size: 32px;\\n} */\\n\\n.headerBtn {\\n          margin-left: 3px;\\n          margin-top: 3px;\\n}\\n\\n.header-shopping-cart {\\n          position: relative;\\n          top: 14px;\\n          left: 50px;\\n}\\n\\n.logo-image {\\n          width: 40px;\\n          height: 40px;\\n          border-radius: 25px;\\n}\\n\\n.logo-container {\\n          display: inline-block;\\n          vertical-align: middle;\\n}\\n\\n.logo-container .logo {\\n          padding-top: 7px;\\n          padding-bottom: 7px;\\n}\\n\\n.total {\\n          display: inline-block;\\n          font-size: 1.2rem;\\n          font-weight: bold;\\n          bottom: 6px;\\n          position: relative;\\n          color: rgb(255, 255, 255);\\n          left: 8px;\\n}\\n\\n.navbar .nav-item {\\n          border-right: none !important;\\n}\\n\\n.fa-shopping-cart {\\n          /* color: rgb(255, 255, 255); */\\n          font-size: 1.7rem;\\n}\\n\\n.fa-shopping-cart.sml,\\n#sml-cart {\\n          font-size: 0.9rem;\\n}\\n\\n.dropdown-toggle {\\n          margin-top: 4px;\\n          cursor: pointer;\\n}\\n\\n.dropdown-toggle .icon-bar {\\n          display: block;\\n          width: 22px;\\n          height: 3px;\\n          background-color: #ffffff;\\n          border-radius: 1px;\\n          margin-bottom: 4px;\\n}\\n\\n.dropdown-toggle:after {\\n          display: none;\\n}\\n\\n.dropdown-toggle:hover .icon-bar {\\n          background-color: #f1f1f1;\\n}\\n\\n/*\\n#navbarSupportedContent .fa {\\n          margin-top: 7px;\\n}\\n\\n#navbarSupportedContent>a {\\n          margin-right: 10px;\\n}\\n\\n#navbarSupportedContent .btn-icon,\\n#navbarSupportedContent .btn-text {\\n          display: inline-block;\\n}\\n\\n#navbarSupportedContent .btn {\\n          position: relative;\\n          border: 0;\\n          padding-left: 36px;\\n          color: #fff;\\n}\\n\\n#navbarSupportedContent .btn-icon {\\n          position: absolute;\\n          left: 0;\\n          top: 0;\\n          bottom: 0;\\n          background-color: #145793;\\n          padding-left: 10px;\\n          padding-right: 10px;\\n          border-radius: .2rem 0 0 .2rem;\\n          color: #fff;\\n}\\n\\n#navbarSupportedContent .btn-success .btn-icon {\\n          background-color: #3b893c;\\n} */\\n\\n.dropdown-menu-right {\\n          padding: 0;\\n}\\n\\n.dropdown-menu-right .dropdown-item {\\n          background-color: #fbfbfb;\\n          border-bottom: 1px solid #f1f1f1;\\n          transition: all 0.3s ease-out;\\n}\\n\\n.dropdown-menu-right .dropdown-item:hover {\\n          background-color: #f1f1f1;\\n}\\n\\n.nav-link.dropdown-toggle {\\n          margin-right: 0 !important;\\n          padding-right: 0;\\n          padding-left: 10px;\\n          padding-top: 2px;\\n}\\n\\n.btn-primary {\\n          background-color: #fbfbfb;\\n}\\n\\n.btn-primary:hover {\\n          background-color: #fbfbfb;\\n}\\n\\n.btn-group-sm>.btn,\\n.btn-sm,\\n.dropdown-item {\\n          font-size: 0.80rem;\\n}\\n\\n#loginBtn {\\n          cursor: pointer;\\n}\\n\\n.nav-mobile-buttons-wrapper,\\n.products-links-mobile {\\n          display: none;\\n}\\n\\n.logo-container .logo-img,\\n.logo-container .logo-text {\\n    display: inline-block;\\n    vertical-align: middle;\\n}\\n\\n.logo-container .logo-headline,\\n.logo-container .logo-subheadline {\\n    display: block;\\n    text-align: center;\\n}\\n\\n.logo-container .logo-headline {\\n    font-size: 1.20rem;\\n}\\n\\n.logo-container .logo-subheadline {\\n    font-size: 0.70rem;\\n    text-align: center;\\n    letter-spacing: 0.05rem;\\n}\\n\\n.logo-container .logo-text {\\n    padding-left: 5px;\\n    line-height: 1rem;\\n}\\n\\n.cart-total {\\n    display: inline-block;\\n    padding-left: 5px;\\n}\\n\\n@media only screen and (max-width: 1275px) and (min-width: 1024px) {\\n    .navbar-nav .nav-link {\\n            padding-top: 0.9rem;\\n            padding-bottom: 0.5rem;\\n    }\\n    .header-shopping-cart {\\n            top: 12px;\\n    }\\n    body {\\n            padding-bottom: 30px;\\n    }\\n}\\n\\n@media screen and (max-width: 1024px) {\\n          .navbar {\\n                    height: 48px;\\n          }\\n          .navbar-nav .nav-link {\\n                    padding-top: 0.70rem;\\n                    padding-bottom: 0.50rem;\\n          }\\n          .header-shopping-cart {\\n                    top: 9px;\\n          }\\n          #navbarSupportedContent .btn {\\n                    margin-top: 0;\\n          }\\n}\\n\\n@media screen and (max-width: 960px) {\\n          .nav-mobile-buttons-wrapper {\\n                    display: block;\\n          }\\n          .nav-buttons-wrapper {\\n                    display: none;\\n          }\\n          .nav-mobile-buttons-wrapper {\\n                    padding: 5px 5px 0;\\n                    text-align: center;\\n          }\\n          .nav-mobile-buttons-wrapper .btn {\\n                    float: none;\\n                    display: block;\\n                    margin-bottom: 5px;\\n                    margin-left: 0;\\n                    text-align: left;\\n                    border: 1px solid transparent;\\n                    padding: .25rem 1.5rem;\\n                    color: #212529;\\n          }\\n          .nav-mobile-buttons-wrapper .btn-icon {\\n                    display: inline-block;\\n                    min-width: 19px;\\n          }\\n          .dropdown-bottom-links {\\n                    padding: 0px 5px 0;\\n                    margin-bottom: 5px;\\n          }\\n          .dropdown-bottom-links .dropdown-item {\\n                    border-bottom: 1px solid transparent;\\n                    border-radius: 3px;\\n                    margin-bottom: 5px;\\n          }\\n          .nav-mobile-buttons-wrapper .btn:hover{\\n              background-color: #f1f1f1;\\n          }\\n}\\n\\n@media screen and (max-width: 768px) {\\n          .body-content-wrapper {\\n                    padding-top: 50px;\\n          }\\n}\\n\\n@media screen and (max-width: 767px) {\\n          .navbar {\\n                    height: 48px;\\n          }\\n          .navbar .navbar-nav {\\n                    flex-direction: initial;\\n                    margin-left: 15px;\\n                    display: none;\\n          }\\n          .products-links-mobile .navbar-nav {\\n                    flex-direction: initial;\\n                    margin-left: 15px;\\n                    display: block;\\n          }\\n          .products-links-mobile .nav-item .nav-link {\\n                    font-size: 0.90rem;\\n                    padding-left: 5px;\\n                    padding-right: 5px;\\n            }\\n          .navbar-collapse.justify-content-end {\\n                    flex-basis: 0;\\n          }\\n          .collapse:not(.show) {\\n                    display: block;\\n          }\\n          .nav-link.dropdown-toggle {\\n                    position: absolute;\\n                    z-index: 1;\\n                    top: 3px;\\n                    right: 12px;\\n          }\\n          #products-dropdown {\\n                    top: 0;\\n          }\\n          .body-content-wrapper {\\n                    padding-top: 8vw;\\n          }\\n          .products-links-mobile {\\n                    display: block;\\n                    position: absolute;\\n                    left: 188px;\\n          }\\n          .products-links-mobile .fa {\\n                    font-size: 1.5rem;\\n                    color: #fff;\\n          }\\n          .navbar-nav.products {\\n                    display: none;\\n          }\\n          .products-links-mobile .nav-link.dropdown-toggle {\\n                    position: relative;\\n                    padding-top: 0.25rem;\\n          }\\n          .products-links-mobile .dropdown-menu.show {\\n                    margin-top: .450rem;\\n                    padding: 0;\\n          }\\n          .products-links-mobile .navbar-nav {\\n                    flex-direction: column;\\n                    margin: 0;\\n          }\\n          .products-links-mobile .navbar-nav .nav-item {\\n                    float: none;\\n                    width: 100%;\\n                    border: 0;\\n          }\\n          .products-links-mobile .navbar-nav .nav-link {\\n                    color: #212529;\\n                    background-color: #fbfbfb;\\n                    border-bottom: 1px solid #f1f1f1;\\n                    transition: all 0.3s ease-out;\\n                    padding-top: 0.30rem;\\n                    padding-bottom: 0.30rem;\\n                    text-transform: none;\\n          }\\n          .products-links-mobile .navbar-nav .nav-link:hover {\\n                    background-color: #f1f1f1;\\n          }\\n          .header-shopping-cart {\\n                    left: 45px;\\n                    top: 9px;\\n          }\\n          .products-links-mobile .navbar-nav .nav-item:first-child>.nav-link {\\n                    border-top-left-radius: 5px;\\n                    border-top-right-radius: 5px;\\n          }\\n          .products-links-mobile .navbar-nav .nav-item:last-child>.nav-link {\\n                    border-bottom-left-radius: 5px;\\n                    border-bottom-right-radius: 5px;\\n          }\\n}\\n\\n@media screen and (max-width: 568px) {\\n          .navbar-nav .nav-link {\\n                    font-size: 0.90rem;\\n                    padding-top: 0.80rem;\\n          }\\n}\\n\\n.btn-outline-warning,\\n.btn-outline-warning:active,\\n.btn-outline-warning:visited {\\n          /* background-color: white !important; */\\n          border-color: white !important;\\n          color: white !important;\\n}\\n\\n.btn-outline-warning:hover {\\n          color: #ffffff !important;\\n          background-color: transparent !important;\\n}\\n\\n.btn {\\n          margin-left: 10px;\\n}\\n\\n#go-back {\\n         -webkit-text-decoration: #ffffff;\\n                 text-decoration: #ffffff;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-toggleable-md  fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand logo-container\\\">\\n        <span class=\\\"logo-img\\\">\\n          <img src=\\\"./../../../assets/logo.png\\\" class=\\\"logo-image\\\" alt=\\\"logo\\\">\\n        </span>\\n        <span class=\\\"logo-text\\\">\\n          <span class=\\\"logo-headline\\\">Perfumes2Go</span>\\n          <span class=\\\"logo-subheadline\\\">(Wholesale)</span>\\n        </span>\\n      </a>\\n    </div>\\n    <div class=\\\"products-links-mobile\\\">\\n      <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"products-dropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <i class=\\\"fa fa-product-hunt\\\" aria-hidden=\\\"true\\\"></i>\\n      </a>\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"products-dropdown\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/products']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:\\n                      true}\\\">All Products</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/products/new']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:\\n                      true}\\\">New Arrivals</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/products/special']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:\\n                      true}\\\">Specials</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/products']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:\\n        true}\\\">All Products</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/products/new']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:\\n        true}\\\">New Arrivals</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/products/special']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:\\n        true}\\\">Specials</a>\\n      </li>\\n    </ul>\\n\\n    <div class=\\\"mx-auto order-0 position-relative\\\">\\n      <span class=\\\"pull-right header-shopping-cart\\\">\\n        <p *ngIf=\\\"showCart\\\" class=\\\"total\\\" id=\\\"shopping-cart-total\\\">\\n          <i class=\\\"fa fa-shopping-cart fa-3x\\\"></i><span class=\\\"cart-total\\\">{{(productsQuantity && productsQuantity !== 0) ? orderItems.length + \\\"(\\\"+productsQuantity+\\\")\\\" : orderItems.length\\n          }}</span>\\n        </p>\\n      </span>\\n    </div>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse justify-content-end pull-right\\\" id=\\\"navbarSupportedContent\\\">\\n      <!-- navbar buttons -->\\n      <div class=\\\"nav-buttons-wrapper\\\">\\n        <a *ngIf=\\\"showLogin\\\" [routerLink]=\\\"['/user/login']\\\" class=\\\"btn btn-sm btn-outline-light\\\">\\n          <i class=\\\"fa fa-sign-in\\\"></i>&nbsp;Login\\n        </a>\\n        <a [routerLink]=\\\"['/user/register']\\\" *ngIf=\\\"showSignup\\\" class=\\\"btn btn-sm btn-outline-light\\\">\\n          <i class=\\\"fa fa-user\\\"></i>&nbsp;Sign Up\\n        </a>\\n        <a *ngIf=\\\"showMyAccount\\\" [routerLink]=\\\"['/user/details']\\\" class=\\\"btn btn-sm btn-outline-light\\\">\\n          <i class=\\\"fa fa-user\\\"></i>&nbsp;Hi, {{userName}}\\n        </a>\\n        <button (click)=\\\"showCartDetails()\\\" *ngIf=\\\"showAddCart\\\" class=\\\"btn btn-sm btn-outline-light\\\">\\n          <i id=\\\"sml-cart\\\" class=\\\"fa fa-shopping-cart\\\"></i>&nbsp;Checkout\\n        </button>\\n        <a [routerLink]=\\\"['/products']\\\" *ngIf=\\\"showEditCart\\\" class=\\\"btn btn-sm btn-outline-light\\\">\\n          <i id=\\\"sml-cart\\\" class=\\\"fa fa-shopping-cart\\\"></i>&nbsp;Edit Cart\\n        </a>\\n        <button *ngIf=\\\"showBack\\\" id=\\\"go-back\\\" class=\\\"btn btn-sm btn-outline-light\\\" (click)=\\\"location.back()\\\">\\n          <i class=\\\"fa fa-arrow-left\\\"></i>&nbsp;Go Back\\n        </button>\\n      </div>\\n      <!-- navbar buttons end -->\\n      <!-- dropdown -->\\n      <div class=\\\"dropdown-wrapper\\\" *ngIf=\\\"showMenu\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </a>\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <!-- navbar buttons form mobile -->\\n          <div class=\\\"nav-mobile-buttons-wrapper clearfix\\\">\\n            <a *ngIf=\\\"showMyAccount\\\" [routerLink]=\\\"['/user/details']\\\" class=\\\"btn btn-sm btn-primary pull-left headerBtn\\\">\\n              <span class=\\\"btn-icon\\\">\\n                <i class=\\\"fa fa-user\\\"></i>\\n              </span>\\n              <span class=\\\"btn-text\\\">Hi, {{userName}}</span>\\n            </a>\\n            <a (click)=\\\"showCartDetails()\\\" *ngIf=\\\"showAddCart\\\" class=\\\"btn btn-sm btn-primary pull-right headerBtn\\\">\\n              <span class=\\\"btn-icon\\\">\\n                <i class=\\\"fa fa-shopping-cart fa-3x sml\\\"></i>\\n              </span>\\n              <span class=\\\"btn-text\\\">Checkout</span>\\n            </a>\\n            <a [routerLink]=\\\"['/products']\\\" *ngIf=\\\"showEditCart\\\" class=\\\"btn btn-sm btn-primary pull-right headerBtn\\\">\\n              <span class=\\\"btn-icon\\\">\\n                <i class=\\\"fa fa-shopping-cart fa-3x sml\\\"></i>\\n              </span>\\n              <span class=\\\"btn-text\\\">Edit Cart</span>\\n            </a>\\n            <a *ngIf=\\\"showBack\\\" class=\\\"btn btn-sm btn-primary pull-right headerBtn\\\" (click)=\\\"location.back()\\\">\\n              <span class=\\\"btn-icon\\\">\\n                <i class=\\\"fa fa-arrow-left\\\"></i>\\n              </span>\\n              <span class=\\\"btn-text\\\">Go Back</span>\\n            </a>\\n            <a [routerLink]=\\\"['/user/register']\\\" *ngIf=\\\"showSignup\\\" class=\\\"btn btn-sm btn-primary pull-right headerBtn\\\">\\n              <span class=\\\"btn-icon\\\">\\n                <i class=\\\"fa fa-user\\\"></i>\\n              </span>\\n              <span class=\\\"btn-text\\\">Sign Up</span>\\n            </a>\\n            <a *ngIf=\\\"showLogin\\\" [routerLink]=\\\"['/user/login']\\\" class=\\\"btn btn-sm btn-primary pull-left headerBtn\\\">\\n              <span class=\\\"btn-icon\\\">\\n                <i class=\\\"fa fa-sign-in\\\"></i>\\n              </span>\\n              <span class=\\\"btn-text\\\">Login</span>\\n            </a>\\n\\n          </div>\\n          <!-- navbar buttons form mobile end -->\\n          <div class=\\\"dropdown-bottom-links clearfix\\\">\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['add-product']\\\" *ngIf=\\\"showAddItem\\\">\\n              <span class=\\\"btn-text\\\">\\n                <i class=\\\"fa fa-plus\\\"></i> Add Item\\n              </span>\\n            </a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/upload-products']\\\" *ngIf=\\\"showUploadProducts\\\">\\n              <span class=\\\"btn-text\\\">\\n                <i class=\\\"fa fa-file-excel-o\\\"></i> Upload Products\\n              </span>\\n            </a>\\n            <!-- <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['user/download']\\\">\\n        <span class=\\\"btn-text\\\">\\n          <i class=\\\"fa fa-file-excel-o\\\"></i> XLS List\\n        </span>\\n      </a> -->\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['orders']\\\" *ngIf=\\\"showOrders\\\">\\n              <span class=\\\"btn-text\\\">\\n                <i class=\\\"fa fa-arrow-right\\\"></i> Orders\\n              </span>\\n            </a>\\n            <a *ngIf=\\\"isUserLoggedIn\\\" id=\\\"loginBtn\\\" class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\n              <span class=\\\"btn-text\\\">\\n                <i class=\\\"fa fa-sign-out\\\"></i> Logout\\n              </span>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- dropdown end -->\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Location } from '@angular/common';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { SessionService } from '../../services/session.service';\nimport { AlertService } from '../alert/alert.service';\nimport { OrderItem } from '../../models/orderItem.model';\nimport { CartService } from '../../services/cart.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  orderItems: OrderItem[] = [];\n  productsQuantity: number;\n  count: number;\n  public showLogin = true;\n  public showSignup = true;\n  public showMyAccount = false;\n  public showAddCart = true;\n  public showCart = true;\n  public showEditCart = false;\n  public showBack = false;\n  public showAddItem = false;\n  public showOrders = false;\n  public showUploadProducts = false;\n  public showMenu = true;\n  public isUserLoggedIn = false;\n  public userName: string;\n  private cartSubscription: Subscription;\n\n  constructor(private cartService: CartService,\n    private session: SessionService,\n    private alert: AlertService,\n    private router: Router,\n    private authService: AuthenticationService,\n    public location: Location) {\n    this.authService.isLoggedIn.subscribe(value => {\n      if (session.retrieveToken() != null || value) {\n        this.showLogin = false;\n        this.showMyAccount = true;\n        this.isUserLoggedIn = true;\n      } else {\n        this.showLogin = true;\n        this.showMyAccount = false;\n        this.isUserLoggedIn = false;\n      }\n\n      if (session.retrieveUserData() != null || value) {\n        this.userName = JSON.parse(session.retrieveUserData()).firstName;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.cartSubscription = this.cartService.cartObservable.subscribe(action => {\n      const orderItems: any[] = this.cartService.getCartItems();\n      this.productsQuantity = 0;\n      for (let index = 0; index < orderItems.length; index++) {\n        this.productsQuantity += Number.parseInt(orderItems[index].quantity);\n      }\n      });\n    this.orderItems = this.cartService.getCartItems();\n\n    this.router.events.subscribe(() => {\n      if (this.location.path() !== '') {\n        this.showHideNavButtons(this.location.path());\n      }\n    });\n  }\n\n  showHideNavButtons(path: string) {\n    if (path === '/products' || path === '/products/new' || path === '/products/special') {\n      this.showBack = false;\n      this.showAddCart = true;\n    } else {\n      this.showBack = true;\n      this.showAddCart = false;\n    }\n\n    if (path === '/order') {\n      this.showEditCart = true;\n    } else {\n      this.showEditCart = false;\n    }\n\n    if (this.isUserLoggedIn) {\n      // this.showMenu = true;\n      this.showLogin = false;\n      this.showSignup = false;\n      this.showMyAccount = true;\n\n      if (path === '/user/details') {\n        this.showMyAccount = false;\n      }\n    } else {\n      // this.showMenu = false;\n      this.showLogin = true;\n      this.showSignup = true;\n      this.showMyAccount = false;\n      if (path === '/user/login') {\n        this.showMyAccount = false;\n        this.showLogin = false;\n        this.showAddCart = false;\n      }\n    }\n\n    if (this.session.retrieveUserData()) {\n      const userCategory = JSON.parse(this.session.retrieveUserData()).category;\n      if (userCategory !== 'Customer') {\n        this.showCart = false;\n        this.showAddCart = false;\n        this.showEditCart = false;\n        this.showAddItem = true;\n        this.showOrders = true;\n        this.showUploadProducts = true;\n      } else {\n        this.showCart = true;\n        this.showAddItem = false;\n        this.showOrders = false;\n        this.showUploadProducts = false;\n      }\n    } else {\n      this.showAddItem = false;\n      this.showOrders = false;\n      this.showUploadProducts = false;\n    }\n\n  }\n\n  showCartDetails() {\n    this.session.saveCartData(JSON.stringify(this.cartService.getCartItems()));\n    this.router.navigate(['/order']);\n  }\n\n  logout() {\n    if (this.session.retrieveToken() != null) {\n      this.session.destroy();\n      this.cartService.clearCart();\n      this.authService.isLoggedIn.next(false);\n      this.alert.success('Successfully signed out');\n      this.router.navigate(['/user/login']);\n    }\n  }\n\n  ngOnDestroy() {\n    this.cartSubscription.unsubscribe();\n  }\n}\n","module.exports = \".zoom {\\n    transition: -webkit-transform .2s;\\n    transition: transform .2s;\\n    transition: transform .2s, -webkit-transform .2s;\\n    /* Animation */\\n    margin: 0 auto;\\n}\\n\\n.zoom:hover {\\n    position: absolute;\\n    -webkit-transform: scale(5);\\n            transform: scale(5);\\n    /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */\\n    /* margin-left: 3vw; */\\n    z-index: 1;\\n}\\n\\n.shopping-cart-total {\\n    font-size: 24px;\\n    font-weight: bold;\\n}\\n\\n.shopping-cart-quantity {\\n    font-size: 18px;\\n    font-weight: bold;\\n    color: #6c6c6c;\\n}\\n\\n.summary-block {\\n    padding: 30px;\\n    background-color: #fff;\\n    border-top: solid 3px #337AB7;\\n}\\n\\n.shopping-cart {\\n    margin-top: 50px;\\n}\\n\\n.summary-table {\\n    margin-top: 20px;\\n    padding: 15px;\\n}\\n\\nbutton{\\n    margin-left: 3px;\\n}\\n\\nh2 {\\n    font-size: 30px;\\n}\\n\"","module.exports = \"<!-- <app-list-products></app-list-products> -->\\n<section *ngIf=\\\"orderItems.length !== 0\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th>Image</th>\\n          <th>Brand</th>\\n          <th>Type</th>\\n          <th>ProductCode</th>\\n          <th>Description</th>\\n          <th>Price</th>\\n          <th>Quantity</th>\\n          <th>Subtotal</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of orderItems\\\">\\n          <td>\\n            <img *ngIf=\\\"!item.product.image\\\" src=\\\"../../../../assets/product_placeholder.png\\\" alt='image' height=\\\"42\\\" width=\\\"42\\\" />\\n            <img *ngIf=\\\"item.product.image\\\" class=\\\"zoom\\\" [src]=\\\"item.product.image\\\" alt=\\\"image\\\" height=\\\"42\\\" width=\\\"42\\\">\\n          </td>\\n          <td>{{item.product.brand}}</td>\\n          <td>{{item.product.type}}</td>\\n          <td>{{item.product.productCode}}</td>\\n          <td>{{item.product.description}}</td>\\n          <td>{{item.product.price | currency:'USD'}}</td>\\n          <td>{{item.quantity}}</td>\\n          <td>{{item.subtotal | currency:'USD'}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <div class=\\\"summary-block shopping-cart text-center center-block\\\">\\n    <span class=\\\"shopping-cart-quantity\\\">\\n      Products: {{ orderItems.length }}\\n      <i class=\\\"fa fa-cubes\\\"></i>\\n      Quantity: {{ quantity }} </span>\\n    <br>\\n    <br>\\n    <span class=\\\"shopping-cart-total\\\">TOTAL: {{ total | currency:'USD'}}</span>\\n    <br>\\n  </div>\\n</section>\\n\\n<!--This section would be shown if cart is empty-->\\n<section class=\\\"summary-table clear\\\" *ngIf=\\\"orderItems.length === 0\\\">\\n  <div class=\\\"shopping-cart text-center center-block\\\">\\n    <h2>Your cart is empty.</h2>\\n    <h5>Try adding products by setting the desired quantity and clicking on the add button.</h5>\\n    <div class=\\\"form-group text-center\\\" style=\\\"margin-top:60px;\\\">\\n      <a [routerLink]=\\\"['/products']\\\">\\n        <button class=\\\"btn btn-success btn-sm place-order\\\">\\n          <i class=\\\"fa fa-reply\\\"></i> View Products\\n        </button>\\n      </a>\\n\\n      <a *ngIf=\\\"!isUserLoggedIn\\\" [routerLink]=\\\"['/user/login']\\\">\\n        <button class=\\\"btn btn-success btn-sm place-order\\\">\\n          <i class=\\\"fa fa-sign-in\\\"></i> Login\\n        </button>\\n      </a>\\n\\n      <a *ngIf=\\\"!isUserLoggedIn\\\" [routerLink]=\\\"['/user/register']\\\">\\n        <button class=\\\"btn btn-success btn-sm place-order\\\">\\n          <i class=\\\"fa fa-user-plus\\\"></i> Register\\n        </button>\\n      </a>\\n    </div>\\n  </div>\\n</section>\\n\\n<!--Below div will be shown when cart is not empty-->\\n<div *ngIf=\\\"orderItems.length !== 0\\\">\\n\\n  <!-- This section would be shown if user is not logged-in -->\\n  <section *ngIf=\\\"!isUserLoggedIn\\\" class=\\\"summary-table clear\\\">\\n    <div class=\\\"text-center center-block\\\">\\n      <h2>Login or Create an Account to Continue</h2>\\n      <div class=\\\"form-group text-center\\\">\\n        <a [routerLink]=\\\"['/user/login']\\\">\\n          <button class=\\\"btn btn-primary btn-sm\\\">\\n            <i class=\\\"fa fa-sign-in\\\"></i> Login</button>\\n        </a>\\n\\n        <a [routerLink]=\\\"['/user/register']\\\">\\n          <button class=\\\"btn btn-success btn-sm\\\">\\n            <i class=\\\"fa fa-user-plus\\\"></i> Register</button>\\n        </a>\\n      </div>\\n    </div>\\n  </section>\\n\\n  <!-- This would be shown in user is logged-in -->\\n  <app-contact-info *ngIf=\\\"isUserLoggedIn\\\"></app-contact-info>\\n</div>\"","import { OrderItem } from '../../../models/orderItem.model';\nimport { CartService } from '../../../services/cart.service';\nimport { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../../services/session.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\n@Component({\n  selector: 'app-cart-details',\n  templateUrl: './cart-details.component.html',\n  styleUrls: ['./cart-details.component.css']\n})\nexport class CartDetailsComponent implements OnInit {\n  total: number;\n  quantity: number;\n  orderItems: OrderItem[] = [];\n  public isUserLoggedIn = false;\n  constructor(private cartService: CartService,\n    private session: SessionService,\n    private authService: AuthenticationService) {\n    this.authService.isLoggedIn.subscribe(value => {\n      if (session.retrieveToken() != null || value) {\n        this.isUserLoggedIn = true;\n      } else {\n        this.isUserLoggedIn = false;\n      }\n    });\n  }\n  ngOnInit() {\n    this.orderItems = this.cartService.getCartItems();\n\n    // This will help to retain cart data even after page refresh\n    if (this.orderItems.length > 0) {\n      this.session.saveCartData(JSON.stringify(this.orderItems));\n    } else if (this.session.retrieveCartData()) {\n      this.orderItems = JSON.parse(this.session.retrieveCartData());\n      this.cartService.setCartItems(this.orderItems);\n    }\n\n    this.getTotalAndQuantity();\n  }\n  getTotalAndQuantity() {\n    this.total = 0;\n    this.quantity = 0;\n    for (let i = 0; i < this.orderItems.length; i++) {\n      this.quantity += Number.parseInt(this.orderItems[i].quantity.toString());\n      this.total += this.orderItems[i].subtotal;\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  order-status works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-status',\n  templateUrl: './order-status.component.html',\n  styleUrls: ['./order-status.component.css']\n})\nexport class OrderStatusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card {\\n    border-top-width: 3px;\\n    margin-bottom: 25px;\\n    color: #6e6e6e;\\n  }\\n  .card-title {    \\n    font-size: 0.95rem;\\n  }\\n  .card-text {\\n    font-size: 0.92rem;\\n  }\\n  legend{\\n    border-bottom: 1px solid rgba(0,0,0,.12);\\n    font-size: 1.1rem;\\n    padding-bottom: 10px;\\n  }\\n  .grand-total-row-bg {\\n  background-color: rgba(0,0,0,.02) !important;\\n}\\n  .order-status-row {\\n  background: #f9f9f9;\\n  font-size: 0.85rem;\\n  color: #3c3c3c;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  border: 1px solid #f1f1f1;\\n  border-radius: 3px;\\n}\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"card\\\" *ngIf=\\\"orderInfo\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"card-title\\\">\\n                <div class=\\\"col-md-6 mx-auto order-status-row\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3 text-right font-weight-bold\\\">Order No.:</div>\\n                        <div class=\\\"col-md-3\\\">{{orderInfo.orderNo}}</div>\\n                        <div class=\\\"col-md-3 text-right font-weight-bold\\\">Order Status:</div>\\n                        <div class=\\\"col-md-3\\\">{{orderInfo.orderStatus}}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-text\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <fieldset *ngIf=\\\"orderInfo.customerId\\\">\\n                            <legend>Customer Details</legend>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">First Name:</div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.customerId.firstName }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Last Name:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.customerId.lastName }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Phone Number:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.customerId.phoneNumber }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Mobile Number:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.customerId.mobileNumber }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Email:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.customerId.email }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Company Name:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.customerId.companyName }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Remarks:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.userRemarks }}</span>\\n                                </div>\\n                            </div>\\n                        </fieldset>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <fieldset *ngIf=\\\"orderInfo.addressId\\\">\\n                            <legend>Delivery Address</legend>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Attention to:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.addressId.attentionTo }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Address Line1:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.addressId.addressLine1 }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Address Line2:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.addressId.addressLine2 }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    City:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.addressId.city + \\\"-\\\" + orderInfo.addressId.zipcode }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Country:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.addressId.country }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Email:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.addressId.email }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    Phone:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.addressId.phone }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-md-4 text-right\\\">\\n                                    State:\\n                                </div>\\n                                <div class=\\\"col-md-8\\\">\\n                                    <span class=\\\"font-weight-bold\\\">{{ orderInfo.addressId.state }}</span>\\n                                </div>\\n                            </div>\\n                        </fieldset>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-striped\\\">\\n            <thead>\\n                <tr>\\n                    <th>Image</th>\\n                    <th>Brand</th>\\n                    <th>Type</th>\\n                    <th>ProductCode</th>\\n                    <th>Description</th>\\n                    <th>Price</th>\\n                    <th>Quantity</th>\\n                    <th>Subtotal</th>\\n                </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"orderInfo\\\">\\n                <tr *ngFor=\\\"let item of orderInfo.orderItems\\\">\\n                    <td>\\n                        <img *ngIf=\\\"!item.productId.image\\\" src=\\\"../../../../assets/product_placeholder.png\\\" alt='image' height=\\\"42\\\" width=\\\"42\\\" />\\n                        <img *ngIf=\\\"item.productId.image\\\" class=\\\"zoom\\\" [src]=\\\"item.productId.image\\\" alt=\\\"image\\\" height=\\\"42\\\" width=\\\"42\\\">\\n                    </td>\\n                    <td>{{item.productId.brand}}</td>\\n                    <td>{{item.productId.type}}</td>\\n                    <td>{{item.productId.productCode}}</td>\\n                    <td>{{item.productId.description}}</td>\\n                    <td>{{item.productId.price | currency:'USD'}}</td>\\n                    <td>{{item.quantity}}</td>\\n                    <td>{{(item.productId.price * item.quantity) | currency:'USD'}}</td>\\n                </tr>\\n                <tr class=\\\"grand-total-row-bg\\\">\\n                    <td colspan=\\\"7\\\" class=\\\"text-right font-weight-bold\\\">Grand Total</td>\\n                    <td class=\\\"font-weight-bold\\\">{{orderInfo.orderAmount | currency:'USD'}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { CartService } from './../../../services/cart.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n    selector : 'app-order-details',\n    templateUrl : './order-details.component.html',\n    styleUrls : ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n    orderId: string;\n    orderInfo = {};\n    grandTotal: number;\n    constructor(private router: Router,\n        private route: ActivatedRoute,\n        private cartService: CartService,\n        private spinner: NgxSpinnerService) {\n        this.orderId = this.route.snapshot.paramMap.get('orderId');\n    }\n\n    ngOnInit() {\n        this.getOrderDetails();\n    }\n\n    getOrderDetails() {\n        this.spinner.show();\n        this.cartService.getOrderDetails(this.orderId).subscribe((resp) => {\n            this.spinner.hide();\n            this.orderInfo = resp;\n        },\n        (err) => {\n            this.spinner.hide();\n        });\n    }\n}\n","module.exports = \".card {\\n    border-top-width: 3px;\\n    margin-bottom: 25px;\\n    color: #6e6e6e;\\n  }\\n  .card-title {\\n    font-size: 0.95rem;\\n    margin-bottom: 15px;\\n    margin-top: 25px;\\n  }\\n  .card-text {\\n    font-size: 0.92rem;\\n    margin-bottom: 35px;\\n  }\\n  .card-text > h3 {\\n    margin-bottom: 45px;\\n  }\\n  .check-icon {\\n  display: inline-block;\\n  width: 61px;\\n  height: 61;\\n  margin: 0 auto;\\n  /* background: url('../../../../assets/check_icon.png') no-repeat 0 0; */\\n}\\n  .fa-thumbs-o-up {\\n  font-size: 80px;\\n  color: #4eae49;\\n}\\n\"","module.exports = \"<div class=\\\"card text-center\\\">\\n    <div class=\\\"card-body\\\">\\n        <i class=\\\"fa fa-thumbs-o-up\\\" aria-hidden=\\\"true\\\"></i>\\n        <div class=\\\"card-title\\\"><h1>Thanks You!</h1></div>\\n        <div class=\\\"card-text\\\">\\n            <h3>Your order is placed successfully</h3>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"startNewOrder()\\\">Place New Order</button>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector : 'app-order-placed',\n    templateUrl: './order-placed.component.html',\n    styleUrls: ['./order-placed.component.css']\n})\nexport class OrderPlacedComponent {\n    constructor(private router: Router) {}\n    startNewOrder() {\n        this.router.navigate(['/products']);\n    }\n}\n","module.exports = \".modal-dialog {\\n  -webkit-transform: translate(0,-50%);\\n  transform: translate(0,-50%);\\n  top: 20%;\\n  margin: 0 auto;\\n}\\n\\n.modal-content {\\n  overflow:hidden;\\n}\\n\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-10 mx-auto\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 text-right col-form-label pt-sm-0\\\">Start Date: </label>\\n      <div class=\\\"col-sm-2\\\"><input type=\\\"date\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"fromDate\\\" (input)=\\\"getOrdersList()\\\"></div>\\n      <label class=\\\"col-sm-2 text-right col-form-label pt-sm-0\\\">End Date: </label>\\n      <div class=\\\"col-sm-2\\\"><input type=\\\"date\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"toDate\\\" (input)=\\\"getOrdersList()\\\"></div>\\n      <label class=\\\"col-sm-2 text-right col-form-label pt-sm-0\\\">Order Status: </label>\\n      <div class=\\\"col-sm-2\\\">\\n        <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"orderStatus\\\" (change)=\\\"getOrdersList()\\\">\\n          <option selected>ALL</option>\\n          <option *ngFor=\\\"let orderStatus of orderStatuses\\\" [value]=\\\"orderStatus\\\">{{orderStatus}}</option>\\n        </select>\\n      </div>\\n  </div>\\n</div>\\n</div>\\n<section>\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th>Order No</th>\\n                <th>Order Date</th>\\n                <th>Order Amount</th>\\n                <th>Customer Name</th>\\n                <th>Order Status</th>\\n                <th>Customer Remark</th>\\n                <th>Action</th>\\n                <th class=\\\"text-center\\\">View</th>\\n             </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let order of orders\\\">\\n                <td>{{order.orderNo}}</td>\\n                <td>{{order.createdAt | date : 'dd MMM, yyyy'}}</td>\\n                <td>{{order.orderAmount | currency:'USD'}}</td>\\n                <td>{{order.customerId.firstName + ' ' +order.customerId.lastName }}</td>\\n                <td>{{order.orderStatus}}</td>\\n                <td>{{order.userRemarks}}</td>\\n                <td>\\n                  <select #status (change)=\\\"orderStatusChanged(order, status.value)\\\" [disabled]=\\\"order.orderStatus === 'Cancelled'\\\">\\n                    <option *ngFor=\\\"let orderStatus of orderStatuses\\\" [value]=\\\"orderStatus\\\" [selected]=\\\"order.orderStatus === orderStatus\\\">{{orderStatus}}</option>\\n                  </select>\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                    <a routerLink=\\\"order-details/{{order._id}}\\\" class=\\\"d-inline-block\\\">\\n                        <span class=\\\"btn btn-success btn-sm place-order pull-right\\\">\\n                          <i class=\\\"fa fa-eye\\\"></i> Details View\\n                        </span>\\n                    </a>\\n                </td>\\n              </tr>\\n              <tr *ngIf=\\\"orders.length === 0\\\">\\n                <td colspan=\\\"8\\\" >\\n                  <div style=\\\"text-align: center;\\\">No orders found</div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n    </div>\\n</section>\\n<section>\\n  <div id=\\\"orderConfirmationModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-md\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body\\\">Are you sure you want to cancel this order? This can not be undone.</div>\\n        <div class=\\\"modal-footer\\\" align=\\\"right\\\">\\n          <button type=\\\"button\\\" id=\\\"btnOK\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"deleteOrder()\\\">\\n            Yes, Cancel it</button>\\n          <button type=\\\"button\\\" id=\\\"btnClose\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\" closeModal() \\\">\\n            No, Keep it</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n\"","import { CartService } from '../../../services/cart.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-orders-list',\n  templateUrl: './orders-list.component.html',\n  styleUrls: ['./orders-list.component.css']\n})\nexport class OrdersListComponent implements OnInit {\n  orders: any = [];\n  orderStatuses = ['Pending', 'In Progress', 'Dispatched', 'Delivered', 'Cancelled'];\n  fromDate: any;\n  toDate: any;\n  orderStatus = 'Pending';\n  selectedOrder: any;\n\n  constructor(private cartService: CartService, private spinner: NgxSpinnerService, ) { }\n\n  ngOnInit() {\n    this.fromDate = new Date();\n    this.toDate = new Date();\n    this.fromDate = new Date(this.fromDate.setDate(this.fromDate.getDate() - 15)); // date before 15 days\n\n    this.fromDate = this.fromDate.getFullYear() + '-' + this.getInTwoDigit(this.fromDate.getMonth() + 1) + '-' +\n      this.getInTwoDigit(this.fromDate.getDate());\n    this.toDate = this.toDate.getFullYear() + '-' + this.getInTwoDigit(this.toDate.getMonth() + 1) + '-' +\n      this.getInTwoDigit(this.toDate.getDate());\n\n    this.getOrdersList();\n  }\n  getInTwoDigit(value) {\n    if (value < 10) {\n      return '0' + value;\n    }\n    return value;\n  }\n\n  getOrdersList() {\n    /** spinner starts */\n    this.spinner.show();\n    this.cartService.getOrders(this.fromDate, this.toDate, this.orderStatus)\n      .subscribe((response) => {\n        /** spinner ends */\n        this.spinner.hide();\n        this.orders = response;\n      },\n        (error) => {\n          /** spinner ends */\n          this.spinner.hide();\n        });\n  }\n\n  orderStatusChanged(order, status) {\n    this.selectedOrder = order;\n    if (status.toLowerCase() === 'cancelled') {\n      $('#orderConfirmationModal').modal('show');\n      return;\n    }\n    /** spinner starts */\n    this.spinner.show();\n    if (status !== 'none') {\n      order.orderStatus = status;\n      const data = {\n        'orderStatus': status,\n        'orderItems': order.orderItems\n      };\n      this.cartService.updateOrder(data, order._id).subscribe(\n        () => {\n          /** spinner ends */\n          this.spinner.hide();\n          order.orderStatus = status;\n        },\n        (err) => {\n          /** spinner ends */\n          this.spinner.hide();\n          console.log('order update error', err);\n        }\n      );\n    }\n  }\n\n  public closeModal() {\n    $('#orderConfirmationModal').modal('hide');\n    this.getOrdersList();\n  }\n\n  deleteOrder() {\n    const status = 'Cancelled';\n    const data = {\n      'orderStatus': status,\n      'orderItems': this.selectedOrder.orderItems\n    };\n    this.cartService.updateOrder(data, this.selectedOrder._id).subscribe(\n      () => {\n        this.selectedOrder.orderStatus = status;\n        $('#orderConfirmationModal').modal('hide');\n      },\n      (err) => {\n        console.log('order update error', err);\n      }\n    );\n  }\n}\n","module.exports = \".card {\\n    background-color: #fcfbfb;\\n    margin-top: 2vw;\\n    margin-bottom: 2vw;\\n}\\n\\n.radio-inline {\\n    margin: 6px 4px;\\n}\\n\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"col-md-8 col-sm-12 mx-auto\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Product\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form class=\\\"form-horizontal\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"SKU\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">SKU:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"SKU\\\" name=\\\"SKU\\\" [(ngModel)]=\\\"model.SKU\\\" #SKU=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && SKU.invalid }\\\"\\n                required> -->\\n              <ng-select [items]=\\\"productCodes\\\" [addTag]=\\\"true\\\" name=\\\"productCode\\\" bindLabel=\\\"productCode\\\" bindValue=\\\"id\\\" #productCode=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && productCode.invalid }\\\"\\n                [(ngModel)]=\\\"model.SKU\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"!isSKUEditable\\\">\\n              </ng-select>\\n              <div [hidden]=\\\"productCode.valid || productCode.untouched\\\">\\n                <small *ngIf=\\\"productCode.errors && productCode.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Product Code is required</small>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"brand\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Brand:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <ng-select [items]=\\\"brands\\\" name=\\\"brand\\\" [addTag]=\\\"true\\\" bindLabel=\\\"brands\\\" bindValue=\\\"id\\\" #brand=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && brand.invalid }\\\"\\n                [(ngModel)]=\\\"model.brand\\\">\\n              </ng-select>\\n              <div [hidden]=\\\"brand.valid || brand.untouched\\\">\\n                <small *ngIf=\\\"brand.errors && brand.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Brand is required</small>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"description\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Description:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"model.description\\\" #description=\\\"ngModel\\\"></textarea>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"type\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Type:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <ng-select [items]=\\\"types\\\" name=\\\"type\\\" [addTag]=\\\"true\\\" bindLabel=\\\"types\\\" bindValue=\\\"id\\\" #type=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && type.invalid }\\\"\\n                [(ngModel)]=\\\"model.type\\\">\\n              </ng-select>\\n              <div [hidden]=\\\"type.valid || type.untouched\\\">\\n                <small *ngIf=\\\"type.errors && type.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Type is required</small>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"stoke\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Stock:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"stock\\\" name=\\\"stock\\\" min=\\\"0\\\" (input)=\\\"restrictNegativeValue($event)\\\" [(ngModel)]=\\\"model.stock\\\"\\n                #stock=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && stock.invalid }\\\" required>\\n              <div [hidden]=\\\"stock.valid || stock.untouched\\\">\\n                <small *ngIf=\\\"stock.errors && stock.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Stock is required</small>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"price\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Price:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" min=\\\"0\\\" (input)=\\\"restrictNegativeValue($event)\\\" [(ngModel)]=\\\"model.price\\\"\\n                #price=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && price.invalid }\\\" required>\\n              <div [hidden]=\\\"price.valid || price.untouched\\\">\\n                <small *ngIf=\\\"price.errors && price.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Price is required</small>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"description\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Category:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <label class=\\\"radio-inline\\\">\\n                <input name=\\\"normal\\\" id=\\\"input-type-normal\\\" value=\\\"normal\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.category\\\" #category=\\\"ngModel\\\"\\n                  checked/> Normal\\n              </label>\\n              <label class=\\\"radio-inline\\\">\\n                <input name=\\\"special\\\" id=\\\"input-type-special\\\" value=\\\"special\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.category\\\" #category=\\\"ngModel\\\"\\n                /> Special\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"status\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Status:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <label class=\\\"radio-inline\\\">\\n                <input name=\\\"active\\\" id=\\\"input-type-active\\\" value=\\\"active\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.productStatus\\\" #productStatus=\\\"ngModel\\\"\\n                  checked/> Active\\n              </label>\\n              <label class=\\\"radio-inline\\\">\\n                <input name=\\\"deactive\\\" id=\\\"input-type-deactive\\\" value=\\\"deactive\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.productStatus\\\" #productStatus=\\\"ngModel\\\"\\n                /> Deactive\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"filePicker\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Upload Image:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"file\\\" id=\\\"filePicker\\\" (change)=\\\"onFileChange($event)\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <button type=\\\"submit\\\" name=\\\"submitted\\\" value=\\\"true\\\" class=\\\"btn btn-success btn-sm place-order\\\" [disabled]='!f.form.valid'>\\n            <i class=\\\"fa fa-send-o\\\"></i> {{buttonLabel}}\\n          </button>\\n          &nbsp;\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"cancel()\\\">\\n            <i class=\\\"fa fa-send-o\\\"></i> Cancel\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from '../../../common/alert/alert.service';\nimport { ProductsService } from '../../../services/products.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n  form: FormGroup;\n  model: any = {};\n  productCode: string;\n  public buttonLabel = 'Add Product';\n  public brands = [];\n  public types = [];\n  public productCodes = [];\n  public isSKUEditable = true;\n\n  constructor(private productService: ProductsService,\n    private alertService: AlertService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    private location: Location) { }\n\n  ngOnInit() {\n    this.productCode = this.route.snapshot.paramMap.get('sku');\n    if (this.productCode) {\n      this.getProductDetails();\n      this.buttonLabel = 'Update Product';\n      this.isSKUEditable = false;\n    }\n    this.getBrands();\n    this.getTypes();\n    this.getProductCode();\n    this.model = {\n      category: 'normal',\n      productStatus: 'active'\n    };\n  }\n\n  getBrands() {\n    this.productService.getBrands().then(\n      (data: any) => {\n        this.brands = data;\n      },\n      error => {\n        console.log('service down ', error);\n      });\n  }\n\n  getTypes() {\n    this.productService.getTypes().then(\n      (data: any) => {\n        this.types = data;\n      },\n      error => {\n        console.log('service down ', error);\n      });\n  }\n\n  getProductCode() {\n    this.productService.getProductCodes().then(\n      (data: any) => {\n        this.productCodes = data;\n      },\n      error => {\n        console.log('service down ', error);\n      });\n  }\n\n\n\n  onSubmit() {\n    /** spinner starts */\n    this.spinner.show();\n\n    if (this.productCode) { // update product\n      this.model.stock = this.model.stock;\n      this.productService.updateProduct(this.model, this.productCode).subscribe(\n        (data: any) => {\n          /** spinner ends */\n          this.spinner.hide();\n          this.alertService.success('Product updated successfully.', true);\n          setTimeout(() => {\n            this.location.back();\n          }, 1000);\n        },\n        error => {\n          /** spinner ends */\n          this.spinner.hide();\n          this.alertService.error(error.statusText);\n          if (error.status === 0) {\n            console.log('service down ', error);\n          } else {\n            this.alertService.error(error.statusText);\n          }\n        });\n    } else { // add product\n      this.productService.addProduct(this.model).subscribe(\n        () => {\n          /** spinner ends */\n          this.spinner.hide();\n          this.alertService.success('Item added successfully.', true);\n          this.router.navigate(['/products']);\n        },\n        error => {\n          /** spinner ends */\n          this.spinner.hide();\n          if (error.status === 0) {\n            console.log('service down ', error);\n          } else {\n            this.alertService.error(error.statusText);\n          }\n        });\n    }\n  }\n\n  onFileChange(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.model['imageBase64'] = reader.result.split(',')[1];\n      };\n    }\n  }\n\n  cancel() {\n    this.location.back();\n  }\n\n  onChange(productCode) {\n    const isProductCodeExist = this.productCodes.indexOf(productCode) > -1;\n    if (isProductCodeExist) {\n      this.productCode = productCode;\n      this.getProductDetails();\n    }\n  }\n\n  getProductDetails() {\n    this.spinner.show();\n    this.productService.getProductDetails(this.productCode).subscribe((resp) => {\n      this.spinner.hide();\n      this.model = resp;\n      this.buttonLabel = 'Update Product';\n    },\n      (err) => {\n        this.spinner.hide();\n        console.log('product details err', err);\n      });\n  }\n\n  restrictNegativeValue(event) {\n    if (+event.target.value < 0) {\n      event.target.value = 0;\n    }\n  }\n}\n","module.exports = \".form-element {\\n    position: absolute !important;\\n    padding-right: 1vw;\\n    right: 20vw;\\n    left: 35vw;\\n    z-index: 1;\\n}\\n\\n.form-element label {\\n    display: inline-block;\\n    width: 4vw;\\n}\\n\\n.form-control {\\n    display: inline-block !important;\\n    width: auto;\\n}\\n\\n.form-element .select-brand{\\n    width: 140px;\\n}\\n\\n.no-data-available {\\n    text-align: center;\\n}\\n\\n.quantity-input {\\n    width: 6vw;\\n}\\n\\n.dataTable td {\\n  word-break: break-all;\\n}\\n\\n.zoom {\\n    transition: -webkit-transform .2s;\\n    transition: transform .2s;\\n    transition: transform .2s, -webkit-transform .2s;\\n    /* Animation */\\n    margin: 0 auto;\\n}\\n\\n​ .zoom:hover {\\n    position: absolute;\\n    -webkit-transform: scale(5);\\n            transform: scale(5);\\n    /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */\\n    /* margin-left: 3vw; */\\n    z-index: 1;\\n}\\n\\ninput[type=\\\"date\\\"]::-webkit-inner-spin-button {\\n    opacity: 0\\n}\\n\\ninput[type=\\\"date\\\"]::-webkit-calendar-picker-indicator {\\n    background: url(https://cdn3.iconfinder.com/data/icons/linecons-free-vector-icons-pack/32/calendar-16.png) center/80% no-repeat;\\n    color: rgba(0, 0, 0, 0);\\n    opacity: 0.5\\n}\\n\\ninput[type=\\\"date\\\"]::-webkit-calendar-picker-indicator:hover {\\n    background: url(https://cdn3.iconfinder.com/data/icons/linecons-free-vector-icons-pack/32/calendar-16.png) center/80% no-repeat;\\n    opacity: 0.8\\n}\\n\\n.deactive-product {\\n    background-color: lightgrey;\\n}\\n\\n.table-striped>tbody>tr.deactive-product {\\n    background-color: lightgrey !important;\\n}\\n\\n.modal-content {\\n    background-color: rgba(0, 0, 0, .0001) !important;\\n}\\n\\n.modal-header {\\n    padding: 0rem .5rem 0rem 0rem !important;\\n    border-bottom: none !important;\\n}\\n\\n.modal-dialog {\\n    text-align: center;\\n}\\n\\n.modal-content {\\n    display: inline-block;\\n}\\n\\n.col-form-label-sm {\\n    text-align: right;\\n}\\n\\n@media (min-width: 768px) {\\n    .modal-dialog {\\n        width: auto;\\n        max-width: auto;\\n    }\\n}\\n\\n@media screen and (max-width: 576px){\\n    .form-element.product-filters {\\n        position: relative !important;\\n        left: 15px;\\n        padding-bottom: 0;\\n        margin-right: 15px;\\n    }\\n}\\n\\n@media screen and (max-width: 575px) {\\n    .form-element.product-filters .form-control {\\n        display: block !important;\\n        width: 100%;\\n    }\\n}\\n\\n@media screen and (max-width: 1124px) and (min-width: 885px) {\\n    .form-element.product-filters {\\n        right: 28vw;\\n        left: 22vw;\\n    }\\n}\\n\\n@media screen and (max-width: 884px) and (min-width: 577px) {\\n    .form-element.product-filters {\\n      position: relative !important;\\n      left: 0;\\n    }\\n}\\n\\n#productImage {\\n    width: auto;\\n    max-width: 100%;\\n    max-height: 70vh;\\n    width: auto\\\\9;\\n    /* ie8 */\\n}\\n\\n#pdImg:hover {\\n  cursor: pointer;\\n}\\n\\n[class*=\\\" col-\\\"] {\\n  padding-left: 0 !important;\\n}\\n\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"form-element product-filters\\\">\\n  <div class=\\\"form-group row clearfix\\\">\\n    <label class=\\\"col-md-2 col-sm-2 col-form-label-sm\\\">Type: </label>\\n    <div class=\\\"col-md-4 col-sm-4\\\">\\n      <select class=\\\"form-control form-control-sm\\\" #type (change)=\\\"selectType(type.value)\\\">\\n        <option selected>ALL</option>\\n        <option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">{{type}}</option>\\n      </select>\\n    </div>\\n    <label class=\\\"col-md-2 col-sm-2 col-form-label-sm\\\">Brand: </label>\\n    <div class=\\\"col-md-4 col-sm-4\\\">\\n      <select class=\\\"form-control form-control-sm select-brand\\\" #brand (change)=\\\"selectBrand(brand.value)\\\">\\n        <option selected>ALL</option>\\n        <option *ngFor=\\\"let brand of brands\\\" [value]=\\\"brand\\\">{{brand}}</option>\\n      </select>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n  <div class=\\\"grid-table-wrapper\\\">\\n    <table id='datTable' datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-bordered table-striped responsive\\\" cellspacing=\\\"0\\\"\\n      width=\\\"100%\\\">\\n      <thead>\\n        <tr>\\n          <th>Image</th>\\n          <th>Brand</th>\\n          <th>Type</th>\\n          <th>Product Code</th>\\n          <th>Description</th>\\n          <th  *ngIf=\\\"userCategory === 'Admin'\\\">SKU</th>\\n          <th>Price</th>\\n          <th>Available</th>\\n          <th *ngIf=\\\"userCategory === 'Customer'\\\">Quantity</th>\\n          <th *ngIf=\\\"userCategory === 'Customer'\\\">Subtotal</th>\\n          <th *ngIf=\\\"userCategory === 'Admin'\\\" class=\\\"text-center\\\">View</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let product of products; let i = index;\\\" [ngClass]=\\\"{'deactive-product':product.productStatus === 'deactive'}\\\">\\n          <td id=\\\"pdImg\\\">\\n            <img *ngIf=\\\"!product.image\\\" src=\\\"../../../../assets/product_placeholder.png\\\" alt='image' height=\\\"42\\\" width=\\\"42\\\" />\\n            <img *ngIf=\\\"product.image\\\" class=\\\"zoom\\\" [src]=\\\"product.image\\\" alt=\\\"image\\\" height=\\\"42\\\" width=\\\"42\\\" data-toggle=\\\"modal\\\" data-target=\\\".bd-modal-sm\\\"\\n              (click)=\\\"openModal(product.image)\\\">\\n          </td>\\n          <td>{{ product.brand }}</td>\\n          <td>{{ product.type }}</td>\\n          <td>{{ product.productCode }}</td>\\n          <td>{{ product.description }}</td>\\n          <td  *ngIf=\\\"userCategory === 'Admin'\\\">{{ product.SKU }}</td>\\n          <td>{{ product.price | currency:'USD'}}</td>\\n          <td>{{ product.stock }}</td>\\n          <td *ngIf=\\\"userCategory === 'Customer'\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control form-control-sm quantity-input\\\" min=\\\"0\\\" max=\\\"{{product.stock}}\\\" value=\\\"{{product.quantity}}\\\"\\n                (input)=\\\"calculateProductSubTotal($event, product)\\\">\\n            </div>\\n          </td>\\n          <td *ngIf=\\\"userCategory === 'Customer'\\\">{{ product.subtotal | currency:'USD'}}</td>\\n          <td text-center *ngIf=\\\"userCategory === 'Admin'\\\" class=\\\"text-center\\\">\\n            <div></div>\\n            <a routerLink=\\\"/product-details/{{product.SKU}}\\\" class=\\\"d-inline-block\\\">\\n              <span class=\\\"btn btn-success btn-sm place-order pull-right\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>&nbsp; Edit\\n              </span>\\n            </a>\\n          </td>\\n        </tr>\\n        <tr *ngIf=\\\"products?.length == 0\\\">\\n          <td colspan=\\\"9\\\" class=\\\"no-data-available\\\">No Product Found!</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n<div>\\n  <!-- <app-item-image-modal modalId=\\\"imageDialogModal\\\" blocking=\\\"true\\\" [dialogData]=\\\"imageData\\\" closebtn=\\\"true\\\">\\n  </app-item-image-modal> -->\\n  <div class=\\\"modal fade bd-modal-sm\\\" id=\\\"imageDialogModal\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <img id=\\\"productImage\\\" class=\\\"img-responsive\\\" src=\\\"\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { SessionService } from './../../../services/session.service';\nimport { ProductsService } from '../../../services/products.service';\nimport { OrderItem } from '../../../models/orderItem.model';\nimport { Product } from '../../../models/product.model';\nimport { CartService } from '../../../services/cart.service';\nimport { InterceptorSkipHeader } from '../../../services/http.request.interceptor';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { environment } from '../../../../environments/environment';\n\ndeclare var $: any;\n\nclass DataTablesResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n@Component({\n  selector: 'app-list-products',\n  templateUrl: './list-products.component.html',\n  styleUrls: ['./list-products.component.css']\n})\nexport class ListProductsComponent implements OnInit {\n  dtOptions: DataTables.Settings = {};\n  products: Product[];\n  orderItem: OrderItem;\n  productListType = 'All';\n  userCategory = 'Customer';\n  columnDefsTarget = [0, 8];\n  defaultOrder = [1, 'asc'];\n  tableColumns = [\n    { data: 'image' }, { data: 'brand' },\n    { data: 'type' }, { data: 'productCode' },\n    { data: 'description' }, { data: 'price' },\n    { data: 'stock' }, { data: 'quantity' }, { data: 'subtotal' }];\n  public brands = [];\n  public types = [];\n\n  public selectedType = '';\n  public selectedBrand = '';\n\n  public productSubTotal = '0.00';\n  public productImage;\n\n  public constructor(private http: HttpClient,\n    private productsService: ProductsService,\n    private cartService: CartService,\n    private location: Location,\n    private session: SessionService,\n    private spinner: NgxSpinnerService) {\n    if (location.path() === '/products/special') {\n      this.productListType = 'special';\n    } else if (location.path() === '/products/new') {\n      this.productListType = 'new';\n    } else {\n      this.productListType = 'all';\n    }\n  }\n\n  public ngOnInit(): void {\n    if (this.session.retrieveUserCategory()) {\n      this.userCategory = this.session.retrieveUserCategory();\n    }\n\n    if (this.userCategory === 'Admin') {\n      this.tableColumns = [\n        { data: 'image' }, { data: 'brand' },\n        { data: 'type' }, { data: 'productCode' },\n        { data: 'description' }, { data: 'SKU' }, { data: 'price' },\n        { data: 'stock' }, { data: 'view' }];\n    } else { // if user is customer\n      if (this.cartService.getCartItems().length > 0) {\n        this.defaultOrder = [7, 'asc'];\n      }\n    }\n\n    this.getProductsData(); // default\n    this.getTypes();\n    this.getBrands();\n  }\n\n  getProductsData() {\n    this.spinner.show();\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    this.dtOptions = {\n      pagingType: 'simple_numbers',\n      serverSide: true,\n      autoWidth: false,\n      processing: false,\n      lengthMenu: [50, 100, 150, 200],\n      order: this.defaultOrder,\n      ajax: (dataTablesParameters: any, callback) => {\n        this.http\n          .get<DataTablesResponse>(\n            environment.baseUrl + '/products', {\n              headers: headers,\n              params: {\n                productListType: this.productListType,\n                userCategory: this.userCategory,\n                searchText: dataTablesParameters.search.value,\n                brand: this.selectedBrand,\n                type: this.selectedType,\n                pageNo: dataTablesParameters.start + 1,\n                recordsPerPage: dataTablesParameters.length,\n                sdir: dataTablesParameters.order[0]['dir'],\n                column: dataTablesParameters.columns[dataTablesParameters.order[0]['column']]['data']\n              }\n            }\n          ).subscribe(resp => {\n            this.spinner.hide();\n            this.products = resp['productList'];\n\n            // If user is a customer then don't show order with stock 0\n            if (this.userCategory === 'Customer') {\n              this.products = this.products.filter(product => {\n                return +product.stock > 0;\n              });\n            }\n            this.products = this.products.map(function (o) {\n              o['subtotal'] = 0;\n              o['quanity'] = 0;\n              return o;\n            });\n            if (dataTablesParameters.columns[dataTablesParameters.order[0]['column']]['data'] === 'quantity') {\n              this.showOrderItemsOnTop(dataTablesParameters.order[0]['dir']);\n            }\n\n            this.setQuantityAndSubtotal();\n\n            callback({\n              recordsTotal: resp['totalProducts'],\n              recordsFiltered: resp['totalProducts'],\n              data: []\n            });\n          }, error => {\n            this.spinner.hide();\n            console.log(error);\n          });\n      },\n      columns: this.tableColumns,\n      columnDefs: [{\n        targets: this.columnDefsTarget,\n        searchable: false,\n        orderable: false,\n        visible: true\n      },\n      { width: '15%', targets: 1 },\n      { width: '10%', targets: 3 },\n      { width: '30%', targets: 4 },\n      { width: '7%', targets: 5 },\n      { width: '8%', targets: 6 }\n      ],\n      language: {\n        emptyTable: 'No data available in table',\n        loadingRecords: 'Please wait ...',\n        zeroRecords: 'No matching records found'\n      }\n    };\n  }\n\n  selectType(value) {\n    this.selectedType = value;\n    $('#datTable').DataTable().column('Type').search(this.selectedType).draw();\n  }\n\n  selectBrand(value) {\n    this.selectedBrand = value;\n    $('#datTable').DataTable().column('brand').search(this.selectedBrand).draw();\n  }\n\n  getBrands() {\n    this.productsService.getBrands().then(\n      (data: any) => {\n        this.brands = data;\n      },\n      error => {\n        console.log('service down ', error);\n      });\n  }\n\n  getTypes() {\n    this.productsService.getTypes().then(\n      (data: any) => {\n        this.types = data;\n      },\n      error => {\n        console.log('service down ', error);\n      });\n  }\n\n  calculateProductSubTotal(event, product) {\n    if (+event.target.value > +product.stock) {\n      event.target.value = product.stock;\n    }\n\n    if (+event.target.value < 0) {\n      event.target.value = 0;\n    }\n\n\n    const quantity = event.target.value === '' ? 0 : event.target.value;\n    const productPrice = product.price;\n    const subTotal = (quantity * productPrice);\n    if (subTotal === 0) {\n      product.subtotal = 0;\n    } else {\n      product.subtotal = subTotal;\n    }\n    this.orderItem = new OrderItem();\n    this.orderItem.setOrderItem(product, quantity, product.subtotal);\n    this.cartService.updateCart(this.orderItem);\n    this.products = this.products.map(function (o) {\n      if (o['_id'] === product._id) {\n        o = product;\n      }\n      return o;\n    });\n    this.cartService.cartObservable.next('cartUpdated');\n  }\n\n  setQuantityAndSubtotal() {\n    const cartItems = this.cartService.getCartItems();\n    if (cartItems && cartItems.length > 0) {\n      for (let i = 0; i < cartItems.length; i++) {\n        for (let j = 0; j < this.products.length; j++) {\n          if (cartItems[i].product._id === this.products[j]._id) {\n            this.products[j]['quantity'] = +cartItems[i].quantity;\n            this.products[j]['subtotal'] = cartItems[i].subtotal;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  showOrderItemsOnTop(sortOrder: string) {\n    const cartItems = this.cartService.getCartItems();\n    let tempItems = this.products.slice(0, cartItems.length);\n    for (let i = 0; i < cartItems.length; i++) {\n      tempItems[i]._id = cartItems[i].product._id;\n      tempItems[i].image = cartItems[i].product.image;\n      tempItems[i].brand = cartItems[i].product.brand;\n      tempItems[i].type = cartItems[i].product.type;\n      tempItems[i].productCode = cartItems[i].product.productCode;\n      tempItems[i].SKU = cartItems[i].product.SKU;\n      tempItems[i].description = cartItems[i].product.description;\n      tempItems[i].price = cartItems[i].product.price;\n      tempItems[i].stock = cartItems[i].product.stock;\n      tempItems[i].quantity = cartItems[i].quantity;\n    }\n\n    if (sortOrder === 'desc') {\n      tempItems = tempItems.sort((a, b) => {\n        return a.quantity - b.quantity;\n      });\n    } else {\n      tempItems = tempItems.sort((a, b) => {\n        return b.quantity - a.quantity;\n      });\n    }\n\n    // following loop will remove cart items from products array(if any)\n    if (tempItems.length > 0) {\n      for (let i = 0; i < tempItems.length; i++) {\n        for (let j = 0; j < this.products.length; j++) {\n          if (this.products[j]._id === tempItems[i]._id) {\n            this.products.splice(j, 1);\n            break;\n          }\n        }\n      }\n    }\n    // Add cart items at top of products array\n    for (let i = 0; i < tempItems.length; i++) {\n      this.products.unshift(tempItems[i]);\n    }\n  }\n\n  public openModal(image) {\n    if (image.indexOf('/product_placeholder.png') !== -1) {\n      image = image.replace('product_placeholder.png', 'coming_soon.jpg');\n    }\n\n    this.productImage = image;\n    $('#productImage').attr('src', image);\n    $('#imageDialogModal').modal('show');\n  }\n\n  sortBasedOnQuantity(sortOrder: string) {\n    if (sortOrder === 'asc') {\n      this.products = this.products.sort((a, b) => {\n        return a['quanity'] - b['quanity'];\n      });\n    } else {\n      this.products = this.products.sort((a, b) => {\n        return b['quanity'] - a['quanity'];\n      });\n    }\n  }\n}\n","module.exports = \".card{\\n  margin-top: 2vw;\\n  margin-bottom: 2vw;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <form>\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"single\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <table class=\\\"table\\\">\\n                <thead>\\n                    <tr>\\n                        <th width=\\\"50%\\\">Name</th>\\n                        <th>Size</th>\\n                        <th>Progress</th>\\n                        <th>Actions</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                        <td>\\n                            <strong>{{ item.file.name }}</strong>\\n                        </td>\\n                        <td nowrap>{{ item.file.size/1024/1024 | number:'.2' }} MB</td>\\n                        <td>\\n                            <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n                                <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n                            </div>\\n                        </td>\\n                        <td nowrap>\\n                            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\" (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n                                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\n                                    <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"item.remove()\\\">\\n                                    <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\n                                </button>\\n                            </div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"text-center\\\" [ngClass]=\\\"{ 'text-danger': isFailed,  'text-success': !isFailed}\\\">\\n                {{message}}\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FileUploader, FileItem, ParsedResponseHeaders } from 'ng2-file-upload';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-upload-products',\n  templateUrl: './upload-products.component.html',\n  styleUrls: ['./upload-products.component.css']\n})\nexport class UploadProductsComponent implements OnInit, AfterViewInit {\n  public uploader: FileUploader = new FileUploader({ url: environment.baseUrl + 'products/upload' });\n  isFailed: Boolean = false;\n  message: String = '';\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.uploader.onErrorItem = (item, response, status, headers) => this.onErrorItem(item, response, status, headers);\n    this.uploader.onSuccessItem = (item, response, status, headers) => this.onSuccessItem(item, response, status, headers);\n  }\n\n  ngAfterViewInit() {\n    this.uploader.onAfterAddingFile = (item => {\n      item.withCredentials = false;\n    });\n  }\n\n  onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    const data = JSON.parse(response); // success server response\n    console.log('success', data);\n    // this.message = data\n    this.isFailed = false;\n    if (data.error_code === 1) {\n      this.isFailed = true;\n      switch (data.err_desc.code) {\n        case 11000:\n          this.message = 'Same SKU cannot be used in multiple records';\n          break;\n        case 9300:\n          this.message = 'Either you uploaded wrong file type or excel is corrupted';\n          break;\n        default:\n          this.message = 'Something went wrong, plese try later';\n      }\n    } else {\n      this.message = data.data;\n      setTimeout(() => {\n        this.router.navigate(['/products']);\n      }, 2000);\n    }\n  }\n\n  onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    const error = JSON.parse(response); // error server response\n    console.log('error', error);\n    switch (error.err_desc.code) {\n      case 11000:\n        this.message = 'Same SKU cannot be used in multiple records';\n        break;\n      default:\n        this.message = 'Something went wrong, plese try later';\n    }\n    this.isFailed = true;\n  }\n}\n","module.exports = \".card{\\n  background-color: #fcfbfb;\\n  margin-top: 2vw;\\n  margin-bottom: 2vw;\\n}\\n\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"col-md-8 col-sm-12 mx-auto\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Address Information\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <section class=\\\"address-information-container clear\\\">\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"attentionTo\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Attention To:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"attentionTo\\\" name=\\\"attentionTo\\\" [(ngModel)]=\\\"model.attentionTo\\\" #attentionTo=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': f.submitted && attentionTo.invalid }\\\" required>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"addressLine1\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Address Line1:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"addressLine1\\\" name=\\\"addressLine1\\\" [(ngModel)]=\\\"model.addressLine1\\\" #addressLine1=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': f.submitted && addressLine1.invalid }\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"addressLine2\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Address Line2:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"addressLine2\\\" name=\\\"addressLine2\\\" [(ngModel)]=\\\"model.addressLine2\\\" #addressLine2=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': f.submitted && addressLine2.invalid }\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"city\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">City:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\" name=\\\"city\\\" [(ngModel)]=\\\"model.city\\\" #city=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && city.invalid }\\\"\\n                  required>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"state\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">State:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"model.state\\\" #state=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && state.invalid }\\\"\\n                  required>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"zipcode\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Zip Code:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zipcode\\\" name=\\\"zipcode\\\" [(ngModel)]=\\\"model.zipcode\\\" #zipcode=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && zipcode.invalid }\\\"\\n                  required>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"country\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Country:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"country\\\" name=\\\"country\\\" [(ngModel)]=\\\"model.country\\\" #country=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && country.invalid }\\\"\\n                  required>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"email\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">E-mail:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\"\\n                  required>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <label for=\\\"phone\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Phone:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"model.phone\\\" #phone=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && phone.invalid }\\\"\\n                  required>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group text-center\\\" *ngIf=\\\"!addressId\\\">\\n            <button type=\\\"submit\\\" name=\\\"submitted\\\" value=\\\"true\\\" class=\\\"btn btn-success place-order\\\">\\n              <i class=\\\"fa fa-map-marker\\\"></i> Add\\n            </button>\\n          </div>\\n          <div class=\\\"form-group text-center\\\" *ngIf=\\\"addressId\\\">\\n            <button type=\\\"submit\\\" name=\\\"submitted\\\" value=\\\"true\\\" class=\\\"btn btn-success place-order\\\">\\n              <i class=\\\"fa fa-save\\\"></i> Save\\n            </button>\\n          </div>\\n        </form>\\n      </section>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { AlertService } from '../../../common/alert/alert.service';\nimport { SessionService } from '../../../services/session.service';\nimport { UsersService } from '../../../services/users.service';\n\n@Component({\n  selector: 'app-add-address',\n  templateUrl: './add-address.component.html',\n  styleUrls: ['./add-address.component.css']\n})\nexport class AddAddressComponent implements OnInit {\n  model: any = {};\n  addressId: string;\n  constructor(private usersService: UsersService,\n    private alertService: AlertService,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    private location: Location,\n    private session: SessionService\n  ) {\n    this.addressId = this.route.snapshot.paramMap.get('addressId');\n  }\n\n  ngOnInit() {\n    if (this.addressId) {\n      this.getAddress();\n    }\n  }\n\n  onSubmit() {\n    if (this.addressId) {\n      this.updateAddress();\n    } else {\n      this.addAddress();\n    }\n  }\n\n  addAddress() {\n    this.model['userId'] = this.session.retrieveUserId();\n    /** spinner starts */\n    this.spinner.show();\n    this.usersService.addAddress(this.model).subscribe(\n      () => {\n        /** spinner ends */\n        this.spinner.hide();\n        this.alertService.success('Address added successfully.');\n        this.location.back();\n      },\n      error => {\n        /** spinner ends */\n        this.spinner.hide();\n        if (error.status === 0) {\n          console.log('service down ', error);\n        } else {\n          this.alertService.error(error.statusText);\n        }\n      });\n  }\n\n  updateAddress() {\n    this.spinner.show();\n    this.model['userId'] = this.session.retrieveUserId();\n    this.usersService.updateAddress(this.model, this.addressId).subscribe(\n      () => {\n        this.spinner.hide();\n        this.alertService.success('Address updated successfully.');\n        this.location.back();\n      },\n      error => {\n        this.spinner.hide();\n        if (error.status === 0) {\n          console.log('service down ', error);\n        } else {\n          this.alertService.error(error.statusText);\n        }\n      });\n  }\n\n  getAddress() {\n    this.spinner.show();\n    this.usersService.getAddressDetails(this.addressId).subscribe(\n      (response) => {\n        this.spinner.hide();\n        this.model = response;\n        this.model._id = undefined;\n      },\n      error => {\n        this.spinner.hide();\n        if (error.status === 0) {\n          console.log('service down ', error);\n        } else {\n          this.alertService.error(error.statusText);\n        }\n      });\n  }\n}\n","module.exports = \"button{\\n    margin-left : 3px;\\n}\\n.card {\\n    background-color: #fcfbfb;\\n    margin-top: 22px;\\n}\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<section class=\\\"contact-information-container\\\">\\n  <h4 class=\\\"contact-information-title text-center\\\">Contact Information</h4>\\n  <p class=\\\"text-center\\\">Please, fill out the following information to complete the order.</p>\\n  <div class=\\\"center-block text-center\\\">\\n    <a [routerLink]=\\\"['/addresses/add-address']\\\">\\n      <button class=\\\"btn btn-success btn-sm\\\">\\n        <i class=\\\"fa fa-plus\\\"></i> Add Address</button>\\n    </a>\\n    <a [routerLink]=\\\"['/addresses']\\\">\\n      <button class=\\\"btn btn-success btn-sm\\\">\\n        <i class=\\\"fa fa-map-marker\\\"></i> Manage Addresses</button>\\n    </a>\\n  </div>\\n<form  name=\\\"form\\\"   (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n  <div class=\\\"col-md-8 col-sm-12 mx-auto\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"card-text\\\">\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"addressId\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Ship to:</label>\\n                <div class=\\\"col-md-9 col-sm-12\\\">\\n                  <select id=\\\"addressId\\\" class=\\\"form-control\\\" name=\\\"addressId\\\" [(ngModel)]=\\\"model.addressId\\\" #addressId=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted }\\\" required>\\n                    <option [ngValue]='addressId' disabled>Select</option>\\n                    <option value=\\\"{{address._id}}\\\" *ngFor=\\\"let address of addresses\\\">\\n                      <!-- X ( ABC 123 CA, CA 222222 INDIA) -->\\n                      {{  address.attentionTo + \\\" (\\\" + address.addressLine1 + (address.addressLine2 ? address.addressLine2 : '') +\\n                      \\\", \\\"+ address.country + \\\", \\\"+ address.state + ', ' + address.city + \\\"-\\\" + address.zipcode +\\\")\\\" }}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"userRemarks\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Notes:</label>\\n                <div class=\\\"col-md-9 col-sm-12\\\">\\n                  <textarea class=\\\"form-control\\\" rows=\\\"4\\\" placeholder=\\\"Comments or Instructions\\\" id=\\\"userRemarks\\\" name=\\\"userRemarks\\\" [(ngModel)]=\\\"model.userRemarks\\\" #userRemarks=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && userRemarks.invalid }\\\"></textarea>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group text-center\\\">\\n                <button type=\\\"submit\\\" name=\\\"submitted\\\" value=\\\"true\\\" class=\\\"btn btn-success btn-sm place-order\\\" [disabled]='!f.form.valid'>\\n                  <i class=\\\"fa fa-send-o\\\"></i> Place Order\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n    </div>\\n</form>\\n</section>\\n\"","import { Subscription } from 'rxjs/Subscription';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SessionService } from '../../../services/session.service';\nimport { OrderItem } from '../../../models/orderItem.model';\nimport { CartService } from '../../../services/cart.service';\nimport { AlertService } from '../../../common/alert/alert.service';\nimport { UsersService } from '../../../services/users.service';\n\n@Component({\n  selector: 'app-contact-info',\n  templateUrl: './contact-info.component.html',\n  styleUrls: ['./contact-info.component.css']\n})\nexport class ContactInfoComponent implements OnInit {\n  addresses: any = [];\n  model: any = {};\n  userId: string;\n  addressId = 'select'; // default select value\n  cartSubscription: Subscription;\n  constructor(private usersService: UsersService,\n    private alertService: AlertService,\n    private cartService: CartService,\n    private session: SessionService,\n    private router: Router,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n    this.userId = this.session.retrieveUserId();\n    this.getAddressesList();\n  }\n\n  onSubmit() {\n    const orderData = this.prepareOrderData();\n    this.spinner.show();\n    this.cartService.saveOrder(orderData).subscribe(\n      () => {\n        this.spinner.hide();\n        this.alertService.success('Order placed successfully.');\n        this.session.removeCartData();\n        this.cartService.clearCart();\n        this.router.navigate(['/order-placed']);\n        this.cartService.cartObservable.next('cartUpdated');\n\n      },\n      error => {\n        this.spinner.hide();\n        if (error.status === 0) {\n          console.log('service down ', error);\n        } else {\n          this.alertService.error(error.statusText);\n        }\n      });\n  }\n\n  getAddressesList() {\n    this.spinner.show();\n    this.usersService.getAddresses(this.userId).subscribe(\n      (resp) => {\n        this.spinner.hide();\n        this.addresses = resp;\n      },\n      error => {\n        this.spinner.hide();\n        if (error.status === 0) {\n          console.log('service down ', error);\n        } else {\n          this.alertService.error(error.statusText);\n        }\n      });\n  }\n\n  prepareOrderData() {\n    const orderData: any = {};\n    orderData['customerId'] = this.userId;\n    orderData['addressId'] = this.model.addressId;\n    orderData['userRemarks'] = this.model.userRemarks;\n\n    const cartItems: OrderItem[] = this.cartService.getCartItems();\n    let orderAmount = 0;\n    const orderItems = [];\n    for (let i = 0; i < cartItems.length; i++) {\n      orderAmount += cartItems[i].subtotal;\n      orderItems.push({ 'productId': cartItems[i].product._id, 'quantity': cartItems[i].quantity, 'SKU': cartItems[i].product.SKU });\n    }\n\n    orderData['orderItems'] = orderItems;\n    orderData['orderAmount'] = orderAmount;\n    orderData['orderStatus'] = 'Pending';\n\n    return orderData;\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  {{message}}\\n</p>\\n\"","import { UsersService } from './../../../../../services/users.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n  message: string;\n  token: string;\n  constructor(private route: ActivatedRoute,\n    private userService: UsersService) { }\n\n  ngOnInit() {\n    this.token = this.route.snapshot.params['token'];\n    if (this.token) {\n      this.verifyUserEmail();\n    }\n  }\n\n  verifyUserEmail() {\n    this.userService.verifyEmail(this.token).subscribe((data: any) => {\n      this.message = data.message;\n    },\n      (err) => {\n        this.message = err.error.message;\n        console.log('product details err', err.error.message);\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-8 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        Forgot Password?\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <section class=\\\"user-information-container clear\\\">\\n          <form (ngSubmit)=\\\"forgetPasswordForm.form.valid && onSubmit(forgetPasswordForm, requestType)\\\" #forgetPasswordForm=\\\"ngForm\\\"\\n            novalidate>\\n            <p *ngIf=\\\"requestType === 'resend'\\\" class=\\\"text-center\\\">Please, enter your e-mail address to resend verification mail.</p>\\n            <p *ngIf=\\\"requestType === 'reset'\\\" class=\\\"text-center\\\">Please, enter your e-mail address to reset your password</p>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"email\\\" class=\\\"col-md-3 col-sm-12 col-form-label text-right\\\">E-mail:</label>\\n              <div class=\\\"col-md-9 col-sm-12\\\">\\n                <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"E-mail\\\" [(ngModel)]=\\\"email\\\" aria-required=\\\"true\\\"\\n                  required>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"requestType === 'reset'\\\" type=\\\"submit\\\" name=\\\"submitted\\\" value=\\\"true\\\" class=\\\"btn btn-success btn-sm place-order\\\"\\n                [disabled]=\\\"!forgetPasswordForm.form.valid\\\">\\n                <i class=\\\"fa fa-key\\\"></i> Reset Password\\n              </button>\\n\\n              <button *ngIf=\\\"requestType === 'resend'\\\" type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"true\\\" class=\\\"btn btn-success btn-sm place-order\\\"\\n                [disabled]=\\\"!forgetPasswordForm.form.valid\\\">\\n                <i class=\\\"fa fa-key\\\"></i> Verify Account\\n              </button>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <h6 class=\\\"contact-information-title text-center\\\">New user?\\n                <a href=\\\"./#/user/register\\\">Create an account here</a>\\n              </h6>\\n            </div>\\n          </form>\\n        </section>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { AlertService } from '../../../common/alert/alert.service';\nimport { SessionService } from '../../../services/session.service';\nimport { UsersService } from '../../../services/users.service';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  email: string;\n  requestType: string;\n  constructor(private usersService: UsersService,\n    private alertService: AlertService,\n    private session: SessionService,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private activeRoute: ActivatedRoute) {\n    this.activeRoute.queryParams.subscribe(params => {\n      this.requestType = params['type'];\n    });\n  }\n\n  ngOnInit() {\n    this.session.destroy();\n  }\n\n  onSubmit(form: NgForm, type) {\n    /** spinner starts */\n    this.spinner.show();\n    if (type === 'reset') {\n      this.usersService.forgotPassword(form.controls['email'].value).subscribe(\n        (data: any) => {\n          /** spinner ends */\n          this.spinner.hide();\n          this.alertService.success(data.message, true);\n          this.router.navigate(['/user/login']);\n        },\n        error => {\n          /** spinner ends */\n          this.spinner.hide();\n          console.log('error', error);\n          this.alertService.error(error.error.message, true);\n        });\n    } else {\n      this.usersService.resendVerificationMail(form.controls['email'].value).subscribe(\n        (data: any) => {\n          /** spinner ends */\n          this.spinner.hide();\n          this.alertService.success(data.message, true);\n          this.router.navigate(['/user/login']);\n        },\n        error => {\n          /** spinner ends */\n          this.spinner.hide();\n          console.log('error', error);\n          this.alertService.error(error.error.message, true);\n        });\n    }\n  }\n}\n","module.exports = \".success-information-container {\\n    padding: 30px 15px;\\n}\\nspan{\\n    margin-left : 3px;\\n}\\n.summary-block {\\n    padding: 30px;\\n    background-color: #fff;\\n    border-top: solid 3px #337AB7;\\n}\\n.mb15 {\\n    margin-bottom: 15px;\\n}\\n.row{\\n    background: #fbfbfb;\\n}\\n.place-order {\\n    margin-top: 25px;\\n}\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<section class=\\\"success-information-container\\\" >\\n  <div *ngFor=\\\"let address of addresses\\\">  \\n    <div class=\\\"summary-block center-block mb15\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 col-sm-12\\\">\\n          {{ address.attentionTo }}<br>\\n          {{ address.addressLine1 }}\\n          {{ address.addressLine2 }}<br>\\n          {{ address.state + ', ' + address.city + \\\"-\\\" + address.zipcode}}<br>\\n          {{ address.country }}<br>\\n          {{ address.email }}<br>\\n          {{address.phone}}<br>\\n        </div>\\n        <div class=\\\"col-md-6 col-sm-12\\\">\\n\\n          <span class=\\\"btn btn-danger btn-sm place-order pull-right ml10 delete-address\\\" (click)=\\\"deleteAddress(address._id)\\\">\\n            <i class=\\\"fa fa-trash\\\"></i> Delete\\n          </span>\\n\\n          <a routerLink=\\\"/addresses/edit-address/{{address._id}}\\\">\\n          <span class=\\\"btn btn-success btn-sm place-order pull-right\\\">\\n            <i class=\\\"fa fa-pencil\\\"></i> Edit\\n          </span>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"addresses.length === 0\\\" >\\n      <h2 style=\\\"text-align: center;\\\">No address is added yet</h2>\\n  </div>\\n</section>\"","import { NgxSpinnerService } from 'ngx-spinner';\nimport { SessionService } from '../../../services/session.service';\nimport { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../../services/users.service';\nimport { AlertService } from '../../../common/alert/alert.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-addresses',\n  templateUrl: './list-addresses.component.html',\n  styleUrls: ['./list-addresses.component.css']\n})\nexport class ListAddressesComponent implements OnInit {\n  addresses: any = [];\n  constructor(private usersService: UsersService,\n    private alertService: AlertService,\n    private router: Router,\n    private session: SessionService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n    this.getAddressesList();\n  }\n\n  getAddressesList() {\n    const userId = this.session.retrieveUserId();\n    this.spinner.show();\n    this.usersService.getAddresses(userId).subscribe(\n      (resp) => {\n        this.spinner.hide();\n        this.addresses = resp;\n      },\n      error => {\n        this.spinner.hide();\n        if (error.status === 0) {\n          console.log('service down ', error);\n        } else {\n          this.alertService.error(error.statusText);\n        }\n      });\n  }\n\n  deleteAddress(addressId) {\n    this.spinner.show();\n    this.usersService.deleteAddress(addressId).subscribe(\n      () => {\n        // this.alertService.success('Address deleted successfully.');\n        this.spinner.hide();\n        this.addresses = this.addresses.filter(address => address._id !== addressId);\n      },\n      error => {\n        this.spinner.hide();\n        if (error.status === 0) {\n          console.log('service down ', error);\n        } else {\n          this.alertService.error(error.statusText);\n        }\n      });\n  }\n\n}\n","module.exports = \".user-information-container {\\n    margin:  auto;\\n}\\n.link{\\n    color: rgb(6, 114, 202) !important;\\n\\n}\\n.card {\\n    background-color: #fcfbfb;\\n  }\\n\\n\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"col-sm-8 mx-auto\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Login\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form name=\\\"form\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"brand\\\" class=\\\"col-sm-3 text-right col-form-label\\\">Email:</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\"\\n                #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" required>\\n              <div [hidden]=\\\"email.valid || email.untouched\\\">\\n                <small *ngIf=\\\"email.errors && email.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Email is required</small>\\n                <small *ngIf=\\\"email.errors && email.errors.pattern\\\" class=\\\"form-text text-left error-msg\\\">Email is invalid</small>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"type\\\" class=\\\"col-sm-3 text-right col-form-label\\\">Password:</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required>\\n              <div [hidden]=\\\"password.valid || password.untouched\\\">\\n                <small *ngIf=\\\"password.errors && password.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Password is required</small>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <button type=\\\"submit\\\" name=\\\"submitted\\\" value=\\\"true\\\" class=\\\"btn btn-success btn-sm place-order\\\" [disabled]='!f.form.valid'>\\n            <i class=\\\"fa fa-send-o\\\"></i> Login\\n          </button>\\n        </div>\\n      </form>\\n      <br/>\\n\\n      <div class=\\\"text-center\\\">\\n        <h6 class=\\\"text-center\\\">New user?\\n          <a href=\\\"./#/user/register\\\">Create an account here</a>\\n        </h6>\\n      </div>\\n\\n      <div class=\\\"text-center\\\">\\n        <h6 class=\\\" text-center\\\">Forgot Password?\\n          <a href=\\\"./#/user/forgot?type=reset\\\">Reset Password</a>\\n        </h6>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <a href=\\\"./#/user/forgot?type=resend\\\">\\n          RESEND VERIFICATION EMAIL\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { AlertService } from '../../../common/alert/alert.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { SessionService } from '../../../services/session.service';\nimport { UsersService } from '../../../services/users.service';\n\n @Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n  constructor(private usersService: UsersService,\n    private alertService: AlertService,\n    private session: SessionService,\n    private authService: AuthenticationService,\n    private spinner: NgxSpinnerService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    /** spinner starts */\n    this.spinner.show();\n    this.usersService.login(this.model).subscribe(\n      (data: any) => {\n        /** spinner ends */\n        this.spinner.hide();\n        this.session.saveToken(data.token['accessToken']);\n        this.session.saveUserId(data.user['_id']);\n        this.session.saveUserData(JSON.stringify(data.user));\n        this.alertService.success('You are logged in successfully.', true);\n        this.authService.isLoggedIn.next(true);\n        if (this.session.retrieveCartData() && this.session.retrieveCartData().length > 0) {\n          this.router.navigate(['/order']);\n        } else {\n          this.router.navigate(['/products']);\n        }\n      },\n      error => {\n        /** spinner ends */\n        this.spinner.hide();\n        if (error.status === 0) {\n          console.log('service down ', error);\n        } else {\n          this.alertService.error(error.error.message);\n        }\n      });\n  }\n}\n","module.exports = \"\\n.card {\\n    background-color: #fcfbfb;\\n  }\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"col-md-8 col-sm-12 mx-auto\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Contact Information\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form name=\\\"form\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"firstName\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">First Name:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"model.firstName\\\" #firstName=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && firstName.invalid }\\\" required>\\n              <small *ngIf=\\\"f.submitted && firstName.invalid\\\" id=\\\"emailHelp\\\" class=\\\"form-text text-left error-msg\\\">First name is required</small>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"lastName\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Last Name:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"model.lastName\\\" #lastName=\\\"ngModel\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"companyName\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Company Name:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyName\\\" name=\\\"companyName\\\" [(ngModel)]=\\\"model.companyName\\\" #companyName=\\\"ngModel\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"phoneNumber\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Phone Number:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phoneNumber\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"model.phoneNumber\\\" #phoneNumber=\\\"ngModel\\\" pattern=\\\"[0-9]{10}\\\">\\n              <small *ngIf=\\\"f.submitted && phoneNumber.invalid && phoneNumber.errors.pattern\\\" class=\\\"form-text text-left error-msg\\\">Phone number is invalid</small>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"mobileNumber\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Mobile Number:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mobileNumber\\\" name=\\\"mobileNumber\\\" [(ngModel)]=\\\"model.mobileNumber\\\" #mobileNumber=\\\"ngModel\\\" pattern=\\\"[0-9]{10}\\\">\\n              <small *ngIf=\\\"f.submitted && mobileNumber.invalid && mobileNumber.errors.pattern\\\" class=\\\"form-text text-left error-msg\\\">Mobile number is invalid</small>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"email\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">E-mail:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" required>\\n              <small *ngIf=\\\"f.submitted && email.invalid && email.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Email is required</small>\\n              <small *ngIf=\\\"f.submitted && email.invalid && email.errors.pattern\\\" class=\\\"form-text text-left error-msg\\\">Email is invalid</small>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"password\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Password:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" minlength=\\\"6\\\" maxlength=\\\"15\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" [required]=\\\"!isUserExists\\\" validateEqual=\\\"confirmPassword\\\"\\n                reverse=\\\"true\\\">\\n              <small *ngIf=\\\"password.errors?.minlength\\\" class=\\\"form-text text-left error-msg\\\">\\n                Password must be at least 6 characters long.\\n              </small>\\n              <small *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"form-text text-left error-msg\\\">Password is required(minimum 6 character)</small>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"row\\\">\\n            <label for=\\\"confirmPassword\\\" class=\\\"col-md-3 col-sm-12 text-right col-form-label\\\">Re-type Password:</label>\\n            <div class=\\\"col-md-9 col-sm-12\\\">\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" name='confirmPassword' minlength=\\\"6\\\" maxlength=\\\"15\\\" [(ngModel)]=\\\"model.confirmPassword\\\"\\n                #confirmPassword=\\\"ngModel\\\" validateEqual=\\\"password\\\" [required]=\\\"!isUserExists\\\">\\n              <div [hidden]=\\\"confirmPassword.untouched\\\">\\n                <small *ngIf=\\\"f.submitted && !confirmPassword.valid\\\" class=\\\"form-text text-left error-msg\\\">Password mismatch</small>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <button type=\\\"submit\\\" name=\\\"submitted\\\" value=\\\"true\\\" class=\\\"btn btn-success btn-sm place-order\\\">\\n            <i class=\\\"fa fa-send-o\\\"></i> {{ buttonLabel }}\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { AlertService } from '../../../common/alert/alert.service';\nimport { SessionService } from '../../../services/session.service';\nimport { UsersService } from '../../../services/users.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  model: any = {};\n  constructor(private usersService: UsersService,\n    private alertService: AlertService,\n    private session: SessionService,\n    private spinner: NgxSpinnerService,\n    private router: Router) { }\n    public buttonLabel = 'Register';\n    public isUserExists = false;\n\n  ngOnInit() {\n    if (this.session.retrieveUserData()) {\n      this.model = JSON.parse(this.session.retrieveUserData());\n      this.model.password = undefined;\n      this.buttonLabel = 'Update';\n      this.isUserExists = true;\n    } else {\n      this.buttonLabel = 'Register';\n      this.isUserExists = false;\n    }\n  }\n\n  onSubmit() {\n    if (this.buttonLabel === 'Register') {\n      /** spinner starts */\n      this.spinner.show();\n      this.model['category'] = 'Customer';\n      this.usersService.register(this.model).subscribe(\n        (data: any) => {\n          /** spinner ends */\n          this.spinner.hide();\n          this.alertService.success(data.message, true);\n          this.router.navigate(['/user/login']);\n        },\n        error => {\n          /** spinner ends */\n          this.spinner.hide();\n          console.log(error.error.message);\n          this.alertService.error(error.error.message, true);\n        });\n    } else {\n      /** spinner starts */\n      this.spinner.show();\n      this.usersService.updateUser(this.model, this.session.retrieveUserId()).subscribe(\n        (data: any) => {\n          /** spinner ends */\n          this.spinner.hide();\n          this.alertService.success('User updated successfully.', true);\n          data.password = undefined;\n          this.session.saveUserData(JSON.stringify(data));\n          this.alertService.success('User Updated successfully.', true);\n        },\n        error => {\n          /** spinner ends */\n          this.spinner.hide();\n          this.alertService.error(error.statusText);\n          if (error.status === 0) {\n            console.log('service down ', error);\n          } else {\n            this.alertService.error(error.statusText);\n          }\n        });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" loadingText=\\\"Loading...\\\" type=\\\"ball-scale-multiple\\\">\\n</ngx-spinner>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-8 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        Reset Password?\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <section class=\\\"user-information-container clear\\\">\\n          <form (ngSubmit)=\\\"f.form.valid && onSubmit(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"row\\\">\\n                <label for=\\\"password\\\" class=\\\"col-sm-3 text-right col-form-label\\\">Password:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required validateEqual=\\\"confirmPassword\\\"\\n                    reverse=\\\"true\\\">\\n                  <div [hidden]=\\\"password.valid || password.untouched\\\">\\n                    <small *ngIf=\\\"password.errors && password.errors.required\\\" class=\\\"form-text text-left error-msg\\\">Password is required(minimum 6 character)</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"row\\\">\\n                <label for=\\\"confirmPassword\\\" class=\\\"col-sm-3 text-right col-form-label\\\">Re-type Password:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" name='confirmPassword' [(ngModel)]=\\\"model.confirmPassword\\\"\\n                    #confirmPassword=\\\"ngModel\\\" validateEqual=\\\"password\\\" required>\\n                  <div [hidden]=\\\"confirmPassword.untouched\\\">\\n                    <small *ngIf=\\\"f.submitted && !confirmPassword.valid\\\" class=\\\"form-text text-left error-msg\\\">Password mismatch</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group text-center\\\">\\n              <button type=\\\"submit\\\" name=\\\"submitted\\\" value=\\\"true\\\" class=\\\"btn btn-success btn-sm place-order\\\">\\n                <i class=\\\"fa fa-send-o\\\"></i> Reset Password\\n              </button>\\n            </div>\\n          </form>\\n        </section>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { AlertService } from '../../../common/alert/alert.service';\nimport { UsersService } from '../../../services/users.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  model: any = {};\n  public token;\n  constructor(private usersService: UsersService,\n    private alertService: AlertService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private activeRoute: ActivatedRoute) {\n    this.activeRoute.params.subscribe(params => this.token = params.token);\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: NgForm) {\n    /** spinner starts */\n    this.spinner.show();\n    this.usersService.resetPassword(this.token, this.model).subscribe(\n      (data: any) => {\n        /** spinner ends */\n        this.spinner.hide();\n        this.alertService.success(data.message, true);\n        this.router.navigate(['/user/login']);\n      },\n      error => {\n        /** spinner ends */\n        this.spinner.hide();\n        console.log(error.error.message);\n        this.alertService.error(error.error.message, true);\n      });\n  }\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => EqualValidatorDirective),\n      multi: true\n    }\n  ]\n})\n\nexport class EqualValidatorDirective implements Validator {\n  constructor(@Attribute('validateEqual') public validateEqual: string,\n    @Attribute('reverse') public reverse: string) {\n\n  }\n\n  private get isReverse() {\n    if (!this.reverse) {\n      return false;\n    }\n    return this.reverse === 'true' ? true : false;\n  }\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    // self value\n    const v = c.value;\n\n    // control vlaue\n    const e = c.root.get(this.validateEqual);\n\n    // value not equal\n    if (e && v !== e.value && !this.isReverse) {\n      return {\n        validateEqual: false\n      };\n    }\n\n    // value equal and reverse\n    if (e && v === e.value && this.isReverse) {\n      delete e.errors['validateEqual'];\n      if (!Object.keys(e.errors).length) {\n        e.setErrors(null);\n      }\n    }\n\n    // value not equal and reverse\n    if (e && v !== e.value && this.isReverse) {\n      e.setErrors({\n        validateEqual: false\n      });\n    }\n    return null;\n  }\n}\n","import { Product } from './product.model';\nexport class OrderItem {\n    product: Product;\n    quantity: number;\n    subtotal: number;\n\n    setOrderItem(product: Product, quantity: number, subtotal: number) {\n      this.product = product;\n      this.quantity = quantity;\n      this.subtotal = subtotal;\n    }\n  }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { SessionService } from './session.service';\n\n@Injectable()\nexport class AdminGuardService implements CanActivate {\n\n  constructor(public session: SessionService, public router: Router) { }\n\n  canActivate(): boolean {\n    const user = this.session.retrieveUserData();\n    const token = this.session.retrieveToken();\n    if (token != null && JSON.parse(user).category === 'Admin') {\n      return true;\n    }\n    this.router.navigate(['products']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { SessionService } from './session.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public session: SessionService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.session.retrieveToken()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  public isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n}\n","import { Product } from './../models/product.model';\nimport { OrderItem } from './../models/orderItem.model';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError as observableThrowError } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private orderItems: OrderItem[] = [];\n  public cartObservable: Subject<any> = new Subject<any>();\n\n  public   ORDERS_URL = environment.baseUrl + 'orders';\n  constructor(private httpClient: HttpClient) { }\n\n  updateCart(orderItem: OrderItem) {\n        if (this.indexOf(orderItem) === -1) {\n            if (orderItem.quantity !== 0) {\n                this.orderItems.push(orderItem);\n            }\n        } else {\n            const index = this.indexOf(orderItem);\n            if (orderItem.quantity === 0) {\n                this.orderItems.splice(index, 1);\n            } else {\n                this.orderItems.splice(index, 1, orderItem);\n            }\n        }\n    }\n  addItem(orderItem: OrderItem) {\n      if (this.indexOf(orderItem) === -1) {\n        orderItem.quantity = 1;\n        orderItem.subtotal = orderItem.quantity * orderItem.product.price;\n        this.orderItems.push(orderItem);\n      } else {\n          const index = this.indexOf(orderItem);\n          this.orderItems[index].quantity++;\n          this.orderItems[index].subtotal = this.orderItems[index].quantity * this.orderItems[index].product.price;\n      }\n  }\n\n  removeItem(orderItem: OrderItem) {\n    if (this.indexOf(orderItem) !== -1) {\n        const index = this.indexOf(orderItem);\n        if (this.orderItems[index].quantity > 1) {\n            this.orderItems[index].quantity--;\n            this.orderItems[index].subtotal = this.orderItems[index].product.price * this.orderItems[index].quantity;\n        } else {\n            this.orderItems.splice(index, 1);\n        }\n      }\n  }\n\n indexOf(orderItem: OrderItem) {\n    for (let index = 0; index < this.orderItems.length; index++) {\n        if (this.orderItems[index].product.SKU === orderItem.product.SKU) {\n            return index;\n        }\n    }\n    return -1;\n}\n\n  getCartItems() {\n      return this.orderItems;\n  }\n\n  setCartItems(cartItems: OrderItem[]) {\n      const itemsCount = cartItems.length;\n      for ( let i = 0; i < itemsCount ; i++) {\n          this.orderItems.push(cartItems[i]);\n      }\n  }\n  clearCart() {\n      this.orderItems.splice(0, this.orderItems.length);\n  }\n\n  saveOrder(data) {\n    return this.httpClient.post(this.ORDERS_URL, data).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  getOrders(fromDate, toDate, orderStatus) {\n     let params = new HttpParams();\n     params = params.append('fromDate', fromDate);\n     params = params.append('toDate', toDate);\n     params = params.append('orderStatus', orderStatus);\n     return this.httpClient.get(this.ORDERS_URL, {params: params}).pipe(\n      map(response => response),\n      catchError(err => Promise.reject(err)));\n  }\n\n  getOrderDetails(orderId) {\n      return this.httpClient.get(this.ORDERS_URL + '/' + orderId).pipe(\n          map(response => response),\n          catchError(err => Promise.reject(err)));\n  }\n\n  updateOrder(data, orderId) {\n    return this.httpClient.patch(this.ORDERS_URL + '/' + orderId, data).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError as observableThrowError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { SessionService } from './session.service';\n\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class HttpsRequestInterceptor implements HttpInterceptor {\n\n  constructor(private session: SessionService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (req.headers.has(InterceptorSkipHeader)) {\n      const headers = req.headers.delete(InterceptorSkipHeader);\n      return next.handle(req.clone({ headers }));\n    } else {\n      if (this.session.retrieveToken() != null) {\n        req = req.clone({\n          setHeaders: {\n            authorization: 'Bearer ' + this.session.retrieveToken()\n          }\n        });\n      }\n      return next.handle(req).pipe(map((event: HttpEvent<any>) => {\n        return event;\n      }), catchError((err: any) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401 || err.status === 403) {\n            console.log('unauthorized user');\n          }\n          return observableThrowError(err);\n        }\n      }), );\n    }\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError as observableThrowError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { InterceptorSkipHeader } from './http.request.interceptor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  public PRODUCTS_URL = environment.baseUrl + 'products';\n  public GET_BRAND = environment.baseUrl + 'products/brands';\n  public GET_TYPES = environment.baseUrl + 'products/types';\n  public GET_PRODUCT_CODE = environment.baseUrl + 'products/sku';\n\n  constructor(private httpClient: HttpClient) { }\n\n  addProduct(data) {\n    return this.httpClient.post(this.PRODUCTS_URL, data).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  getProducts(dataTablesParameters) {\n    return this.httpClient.get(this.PRODUCTS_URL).toPromise()\n      .then((data: any) => {\n      })\n      .catch(err => Promise.reject(err));\n  }\n\n  getBrands() {\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    return this.httpClient.get(this.GET_BRAND, { headers: headers }).toPromise()\n      .catch(err => Promise.reject(err));\n  }\n\n  getTypes() {\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    return this.httpClient.get(this.GET_TYPES, { headers: headers }).toPromise()\n      .catch(err => Promise.reject(err));\n  }\n\n  getProductCodes() {\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    return this.httpClient.get(this.GET_PRODUCT_CODE, { headers: headers }).toPromise()\n      .catch(err => Promise.reject(err));\n  }\n\n  getProductDetails(productCode) {\n    return this.httpClient.get(this.PRODUCTS_URL + '/details/' + productCode).pipe(\n      map(response => response),\n      catchError(err => Promise.reject(err)));\n  }\n\n  updateProduct(data, productCode) {\n    data._id = undefined;\n    return this.httpClient.patch(this.PRODUCTS_URL + '/' + productCode, data).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SessionService {\n\n  private tokenKey = 'app_token';\n  private userId = 'user_id';\n  private userName = 'user_name';\n  private cartData = 'cart_data';\n  private userData = 'user_data';\n  constructor() {\n  }\n\n  public saveToken(token) {\n    sessionStorage.setItem(this.tokenKey, token);\n  }\n\n  public retrieveToken() {\n    const storedToken: string = sessionStorage.getItem(this.tokenKey);\n    return storedToken;\n  }\n\n  public saveUserId(token) {\n    sessionStorage.setItem(this.userId, token);\n  }\n\n  public retrieveUserId() {\n    const storedUserId: string = sessionStorage.getItem(this.userId);\n    return storedUserId;\n  }\n\n  public saveCartData(cartData) {\n    sessionStorage.setItem(this.cartData, cartData);\n  }\n  public retrieveCartData() {\n    return sessionStorage.getItem(this.cartData);\n  }\n  public removeCartData() {\n    sessionStorage.removeItem(this.cartData);\n  }\n\n  public saveUserData(userData) {\n    sessionStorage.setItem(this.userData, userData);\n  }\n  public retrieveUserData() {\n    return sessionStorage.getItem(this.userData);\n  }\n\n  public retrieveUserCategory() {\n    if (this.retrieveUserData()) {\n      return JSON.parse(this.retrieveUserData()).category;\n    }\n    return 'Customer';\n  }\n\n  public destroy(): void {\n    sessionStorage.clear();\n  }\n}\n","import { environment } from './../../environments/environment.prod';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError as observableThrowError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { InterceptorSkipHeader } from './http.request.interceptor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  public REGISTER_URL = environment.baseUrl + 'auth/register';\n  public VERIFY_EMAIL = environment.baseUrl + 'auth/verify';\n  public LOGIN_URL = environment.baseUrl + 'auth/login';\n  public USERS_URL = environment.baseUrl + 'users';\n  public ADD_ADDRESS_URL = environment.baseUrl + 'addresses';\n  public ADDRESSES_URL = environment.baseUrl + 'addresses';\n  public SEND_FORGOT_PASSWORD_URL = environment.baseUrl + 'auth/forgot';\n  public RESET_PASSWORD_URL = environment.baseUrl + 'auth/reset';\n  public RESEND_TOKEN_URL = environment.baseUrl + 'auth/resend';\n\n  constructor(private httpClient: HttpClient) { }\n\n  register(data) {\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    return this.httpClient.post(this.REGISTER_URL, data, { headers }).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  login(data) {\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    return this.httpClient.post(this.LOGIN_URL, data, { headers }).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  forgotPassword(email) {\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    return this.httpClient.post(this.SEND_FORGOT_PASSWORD_URL, { email: email }, { headers }).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  resetPassword(token, model) {\n    let params = new HttpParams();\n    params = params.append('token', token);\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    return this.httpClient.post(this.RESET_PASSWORD_URL, { password: model.password }, { headers: headers, params: params }).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n\n  getUserDetails(userId) {\n    let params = new HttpParams();\n    params = params.append('userId', userId);\n    return this.httpClient.get(this.USERS_URL + '/' + userId).pipe(\n      map(response => response),\n      catchError(err => Promise.reject(err)));\n  }\n\n  updateUser(data, userId) {\n    return this.httpClient.patch(this.USERS_URL + '/' + userId, data).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  addAddress(data) {\n    return this.httpClient.post(this.ADD_ADDRESS_URL, data).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  updateAddress(data, addressId) {\n    return this.httpClient.patch(this.ADDRESSES_URL + '/' + addressId, data).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  getAddresses(userId) {\n    let params = new HttpParams();\n    params = params.append('userId', userId);\n    return this.httpClient.get(this.ADDRESSES_URL, { params: params }).pipe(\n      map(response => response),\n      catchError(err => Promise.reject(err)));\n  }\n\n  getAddressDetails(addressId) {\n    return this.httpClient.get(this.ADDRESSES_URL + '/' + addressId).pipe(\n      map(response => response),\n      catchError(err => Promise.reject(err)));\n  }\n\n  deleteAddress(addressId) {\n    return this.httpClient.delete(this.ADDRESSES_URL + '/' + addressId).pipe(\n      map(response => response),\n      catchError((error: Response) => observableThrowError(error)));\n  }\n\n  verifyEmail(token) {\n    return this.httpClient.get(this.VERIFY_EMAIL + '/' + token).pipe(\n      map(response => response),\n      catchError(err => Promise.reject(err)));\n  }\n\n  resendVerificationMail(email) {\n    const headers = new HttpHeaders().set(InterceptorSkipHeader, '');\n    return this.httpClient.post(this.RESEND_TOKEN_URL, { email: email }, { headers }).pipe(\n      map(response => response),\n      catchError(err => Promise.reject(err)));\n  }\n}\n","export const environment = {\n  production: true,\n  // baseUrl: 'https://www.akrosstore.com/api/'\n  baseUrl: 'http://www.perfumes2go.net/api/'\n};\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:3000/api/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n  window.console.log = function () { };\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}